{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/algolia.svg","path":"img/algolia.svg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"source/font/Pacifico-Regular.ttf","path":"font/Pacifico-Regular.ttf","modified":0,"renderable":0},{"_id":"source/img/avatar-regex.png","path":"img/avatar-regex.png","modified":0,"renderable":0},{"_id":"source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":0},{"_id":"source/img/top-tags.png","path":"img/top-tags.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/css/fps.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1748401134000},{"_id":"source/_drafts/cf-wkrs-vless.md","hash":"5e53b2df834c3588695b8dcdc8ae6e52d9442d3e","modified":1748401134000},{"_id":"source/about/index.md","hash":"60ccbdabbde1825858e03423b2c64c7e9ce66914","modified":1749007540499},{"_id":"source/categories/index.md","hash":"b9b2546d7051e542c0031bf1bf576f7bebd837fa","modified":1749007598078},{"_id":"source/_posts/1-Kubernetes一主二从集群搭建准备工作.md","hash":"09d91e452b819dd203c9243359d651f5e607bea9","modified":1748401134000},{"_id":"source/_posts/2.位运算操作-取反.md","hash":"53ba46b1ee33d4d103e07666e86f5a84dbd3af33","modified":1748401134000},{"_id":"source/_posts/2020-08-11-leetcode-2-两数相加.md","hash":"8e0914d1b89069192345ee377fd5ca1df44327c9","modified":1748401134000},{"_id":"source/_posts/2020-08-25-python使用位图对数据进行排序.md","hash":"517225d47dd74ff4a9b3cfdab4e34417fd7ce4ae","modified":1748401134000},{"_id":"source/_posts/2020-08-29-leetcode-7-字符串Z字(V字)输出.md","hash":"9f9f34ac3cfd9be262b6620b96234d7f00291779","modified":1748401134000},{"_id":"source/_posts/2020-08-30-leetcode-8-字符串转换整数(atoi).md","hash":"919afa2085ef6c2d07bea6277e474d98cd771f19","modified":1748401134000},{"_id":"source/_posts/2020-08-30-计算机系统知识(一).md","hash":"ccbf4a862e0aa6b35644e63354dd9314dfcf9891","modified":1748401134000},{"_id":"source/_posts/2020-08-31-leetcode-15-三数之和.md","hash":"51e37d296f58573610e97ae4c5da2b48de2a4bbc","modified":1748401134000},{"_id":"source/_posts/2020-09-01-Mac-Application快捷键神器.md","hash":"5b9442db9f653c6b50359d64c68a5bb71cd18ded","modified":1748401134000},{"_id":"source/_posts/AIToolsSet-Napkin实现文本可视化.md","hash":"f412aa57f0caae3a5c236b314c0d3d5d95e65e4d","modified":1748401134000},{"_id":"source/_posts/Go-IoC与委托.md","hash":"ece5761f5ec21c69cab8ce0147c7c5913353d6a8","modified":1748401134000},{"_id":"source/_posts/20250306_日记_梦搂记.md","hash":"bf56ba53b21bc75a739b871f545326b21dea83ab","modified":1748401134000},{"_id":"source/_posts/Go-chapter1-gRPC概述与发展.md","hash":"11d3bdc5aa1183e08be52cba8493700a4c1af778","modified":1748401134000},{"_id":"source/_posts/Go-protoc使用生成文件.md","hash":"2aee644d157ef3b7d0dcafc989740c9b1760133d","modified":1748401134000},{"_id":"source/_posts/Go-模版方法模式.md","hash":"995218927ffc2d123edbbb41cf160a0321102c50","modified":1748401134000},{"_id":"source/_posts/Go-设计模式-门面模式.md","hash":"eac8c5822f6413dc158662303d59718d1301ea34","modified":1748401134000},{"_id":"source/_posts/Go-项目工程态Kratos初始化项目脚手架.md","hash":"1181becb119dd28d54bf88d4014c44b8e1a544c6","modified":1748401134000},{"_id":"source/_posts/Golang-GC 三色回收机制与混合读写屏障.md","hash":"ee1126e1bd6ae9d4f272aaa7aa49cb8e21846094","modified":1748401134000},{"_id":"source/_posts/Golang调度器GMP原理与调度全分析.md","hash":"a7ffdab222f55d8cb7dbc30ae406663aabd7facf","modified":1748401134000},{"_id":"source/_posts/Go可选参数的使用技巧.md","hash":"a67d81492147c5addd2cfa8776f314c9dc217a6f","modified":1748401134000},{"_id":"source/_posts/Go性能分析工具.md","hash":"dc888ce1b3d41ef9fb10cacc07a194b6feb81e82","modified":1748401134000},{"_id":"source/_posts/Redis分布式锁.md","hash":"bf79a548ecf49e4deb7fc5151f7543d7d549691e","modified":1748401134000},{"_id":"source/_posts/InfluxDB基础概念与应用(一).md","hash":"88676265b947ce18db661db4484a6acd1948afd0","modified":1748401134000},{"_id":"source/_posts/Redis延时队列.md","hash":"20834829f6bc728100c528c73e608b2794d723a1","modified":1748401134000},{"_id":"source/_posts/Redis的基础数据结构.md","hash":"14652609373e5be0269a8a72def26cf6e5c24016","modified":1748401134000},{"_id":"source/_posts/babel.md","hash":"e271307c8f651b526ad4b9c703c819872746c504","modified":1748401134000},{"_id":"source/_posts/blog.md","hash":"981301b6d2518feec6a9a92434576614348410b3","modified":1748401134000},{"_id":"source/_posts/canvas-geojson.md","hash":"ce32a947402cf30eb20a9393b3bb92437a5ed992","modified":1748401134000},{"_id":"source/_posts/canvas.md","hash":"11258767321b672e22dadc2e7250c37fd048c767","modified":1748401134000},{"_id":"source/_posts/celery.md","hash":"37472d8093b2c7d01b6d77cc316330c68d9c7262","modified":1748401134000},{"_id":"source/_posts/cf-wkrs-node.md","hash":"8df5e65099af0766a16a639927017ded35f807bc","modified":1748401134000},{"_id":"source/_posts/code.md","hash":"8ee16b11c6a19e1d2d510dbcc920da1856a42ed4","modified":1748401134000},{"_id":"source/_posts/commitizen.md","hash":"09e6449280a58935df06b2ba246c68058ebc4183","modified":1748401134000},{"_id":"source/_posts/deepseek本地安装.md","hash":"abd816a528a7ef9e37a5b043d58b0db7421cdb22","modified":1748401134000},{"_id":"source/_posts/deploy.md","hash":"909831fbf65213a24214ec94e15f60c1ae1532d8","modified":1748401134000},{"_id":"source/_posts/docker.md","hash":"1ea82ca284cce577efca90e66b457de60f9b0d0a","modified":1748401134000},{"_id":"source/_posts/docker镜像优化.md","hash":"63d42804a1dde94feb144f3d1c4d189dcc58ca4e","modified":1748401134000},{"_id":"source/_posts/frp内网穿透.md","hash":"abb70d966a7152870af6599e971e83976bc9b16e","modified":1748401134000},{"_id":"source/_posts/geojson.md","hash":"900536b4683f252cfa9500c7d174c3c31cf314a1","modified":1748401134000},{"_id":"source/_posts/git-mac.md","hash":"80dacc4be816ab392e5525d909b786a32e5470a6","modified":1748401134000},{"_id":"source/_posts/git-rebase.md","hash":"b8ac8927a6b07bd13c70f0da0f01e17a41d45b21","modified":1748401134000},{"_id":"source/_posts/git.md","hash":"f127d8ec2018c04fbe496fac56e9d4aec375984b","modified":1748401134000},{"_id":"source/_posts/github-webhooks.md","hash":"de1f94772aa0d17d77793a48d646d055e1227179","modified":1748401134000},{"_id":"source/_posts/github-workflow.md","hash":"b908856e16464dcaa9f453f22c57105b312ef846","modified":1748401134000},{"_id":"source/_posts/github.io.md","hash":"19728b1b84a278ca68bfdb2cc93f71d73416117c","modified":1748401134000},{"_id":"source/_posts/go.md","hash":"c05d4aa4d6fdc40d6264cbb288c1c4c803ab9c74","modified":1748401134000},{"_id":"source/_posts/golang-高级函数的使用细节.md","hash":"c9ba778b43117a62c06aa5220c7519448ada00f5","modified":1748401134000},{"_id":"source/_posts/golang中go mod使用解决导包路径.md","hash":"c4bf35d56c17a8349db24fc7494711acc0e6783f","modified":1748401134000},{"_id":"source/_posts/golang反射reflect的使用.md","hash":"eaf1836350086726b0266d907e27cee0f3d7adfa","modified":1748401134000},{"_id":"source/_posts/hash.md","hash":"b56602e25e1704a90a4930ac497b8c352a05dac9","modified":1748401134000},{"_id":"source/_posts/homebrew.md","hash":"52128016ef0af7f265a6b2921a3ef7766b572f87","modified":1748401134000},{"_id":"source/_posts/lerna.md","hash":"bfb6dbc6d0beec6da24082871a9a8e8d1e424eeb","modified":1748401134000},{"_id":"source/_posts/linux-nodejs.md","hash":"e784efcb72e6a7858a88384fda08159343a2b2e0","modified":1748401134000},{"_id":"source/_posts/linux.md","hash":"8f79b6e2bfa935b074d644b0c3d5f9f3b62d98ff","modified":1748401134000},{"_id":"source/_posts/mac安装sshpass工具实现免密操作.md","hash":"a5a5acc9126ab5bd93cf11baab45c65e027f7aa6","modified":1748401134000},{"_id":"source/_posts/nginx.md","hash":"12591cb6080fa18fa5f13276d8d6c211976d6a1b","modified":1748401134000},{"_id":"source/_posts/node-n.md","hash":"bcf51f07697a26dc2ef08680002341c48a533eaf","modified":1748401134000},{"_id":"source/_posts/oauth.md","hash":"8e2f91944356169ea29b5900146cdea6112a569c","modified":1748401134000},{"_id":"source/_posts/pm2.md","hash":"f5438f66467418f69815d61efae8751f6c589e5a","modified":1748401134000},{"_id":"source/_posts/regexp.md","hash":"cdb26decead8be57af129fe2ddfcc1b10f55d443","modified":1749019927009},{"_id":"source/_posts/serverless-devs.md","hash":"6497d0b7a1988e90ef263275507625ef8baf7d6b","modified":1748401134000},{"_id":"source/_posts/postgres安装教程.md","hash":"12bdc933f725784ea0cd814d6913593d3700fcd1","modified":1748401134000},{"_id":"source/_posts/switch.md","hash":"4343c0a03f2a55c5236b8cb4600320c6cb0f103f","modified":1748401134000},{"_id":"source/_posts/singularity.md","hash":"f4f67aa868d3161df8c19f1a1bb76d20d573ff29","modified":1748401134000},{"_id":"source/_posts/translate-go内存模型.md","hash":"3029d6cf70623b8c1e683b778f29143c7833c3cd","modified":1748401134000},{"_id":"source/_posts/webgl.md","hash":"181209308eaebe19994b9fb076d1ecac9ef2fe1f","modified":1748401134000},{"_id":"source/_posts/ubuntu20.04.md","hash":"15ec3e81264d2a3dcc542c232dbd0d3ed43f8436","modified":1748401134000},{"_id":"source/_posts/从大语言模型到 LangChain.md","hash":"b46fc6cf19ab3aa583b3e634ccbb901373b77f52","modified":1748401134000},{"_id":"source/_posts/初窥MCP.md","hash":"886cecb185e6493220e3346bdbe35718a3625a4b","modified":1748401134000},{"_id":"source/_posts/双栈实现一个队列.md","hash":"cf5d2318346ee39706d93803b8d668ead5068f47","modified":1748401134000},{"_id":"source/_posts/图床-七牛云和gitbub使用.md","hash":"d28a736b4b7f0b59d223012f2ef37aab61232fbe","modified":1748401134000},{"_id":"source/_posts/将有序数组放入到二叉树中.md","hash":"7fa4f2063cdcd2779b20a2c62278423560450b8e","modified":1748401134000},{"_id":"source/_posts/并发常见问题.md","hash":"ad35169382d5798d5267c3f9cb671d2cfae4137d","modified":1748401134000},{"_id":"source/_posts/并发性能测试工具Jmeter的使用.md","hash":"70d9118df6519540e7aa75fde12af86a82fa4ea1","modified":1748401134000},{"_id":"source/_posts/快速搭建静态文件服务.md","hash":"a74061d7181c07497f4e740a66620de3755cd6c8","modified":1748401134000},{"_id":"source/_posts/求最长公共字串及其起始位置.md","hash":"c360de8c3d3cb35f7cf6ef2f07794074a46d508c","modified":1748401134000},{"_id":"source/_posts/设计一个有getMin功能的栈.md","hash":"e49ec1d4928cbb6ef46644bcfa631049af33c845","modified":1748401134000},{"_id":"source/_posts/递归实现栈逆序.md","hash":"5b2bca9d0585dcfdbd6207b65ca3973420a3fc45","modified":1748401134000},{"_id":"source/_posts/零工经济的崛起.md","hash":"589fc10e9fa560d48ec51a36d82c0c25f61a53a7","modified":1748401134000},{"_id":"source/img/avatar.png","hash":"a86cda98d5bc02e86f94c2ac48bfa0769be9019d","modified":1749017674272},{"_id":"source/img/avatar-regex.png","hash":"3a6daf9a6133b55707303186166bfa0f61371238","modified":1748401134000},{"_id":"source/img/blog.png","hash":"574a3c21f824f3592ec596af128c2c381b26eb44","modified":1748401134000},{"_id":"source/img/canvas-china-demo.png","hash":"90a109dee9dca864cdd9b3d354d2d011152a1012","modified":1748401134000},{"_id":"source/img/canvas-circle.png","hash":"a8e588b86ca4f719914ccce939e92ee824d66c4b","modified":1748401134000},{"_id":"source/img/canvas-grid.png","hash":"c1dd970806c3eff3e55aceaddbd6f9af4e4a655f","modified":1748401134000},{"_id":"source/img/canvas-line.png","hash":"12fb79ef5533a3cc5d71badbc09adf938986aa0e","modified":1748401134000},{"_id":"source/img/canvas-point.png","hash":"802302e483c5ea1b5253a3ac8900481ce4e82ce7","modified":1748401134000},{"_id":"source/img/canvas-rectangle.png","hash":"45989b0b2f0467ec604bae85f35d352add57b0fa","modified":1748401134000},{"_id":"source/img/canvas-text.png","hash":"09fb729d09129b6eacdb4fd203d2d1dc1a7c7ca8","modified":1748401134000},{"_id":"source/img/canvas-triangle.png","hash":"cc6e36a6d2d2b90c3fcfe6830bb8128cfc2c51db","modified":1748401134000},{"_id":"source/img/canvas.png","hash":"8a085cdd2f57c2d0a60139c287b7790697cef604","modified":1748401134000},{"_id":"source/img/celery_512.png","hash":"b833973e834aa1ae4539a17daf1fdc63f64bb0f1","modified":1748401134000},{"_id":"source/img/cf-wkrs-node-9.png","hash":"f20c32166b0b51afc2e8003eb59128c0d32ca650","modified":1748401134000},{"_id":"source/img/cf-wkrs-node.png","hash":"4668fdacb1220af8dfb9d05e17bb556e9e9a3147","modified":1748401134000},{"_id":"source/img/code.png","hash":"f3cb5d8f34b6bca192235ba457361148271ba670","modified":1748401134000},{"_id":"source/img/commitizen-0.png","hash":"4d045a416afb4765742b18e65c19fea4a89249d6","modified":1748401134000},{"_id":"source/img/commitizen-avatar.png","hash":"8c5fd84624a8c8b87ad295dd332d4004d628028d","modified":1748401134000},{"_id":"source/img/cover-ast.png","hash":"802964a966ec3312b2d5c3a876f73a21a985732e","modified":1748401134000},{"_id":"source/img/cover-blog.png","hash":"9d4b7fec6ef089322d561d428a69cbfa2d89e0c3","modified":1748401134000},{"_id":"source/img/cover-docker.png","hash":"3f4ea8b4bf3b1c5f65a0ed96ca62b936d1d95dcc","modified":1748401134000},{"_id":"source/img/cover-github-webhooks.png","hash":"2bcebbf0a984ab98f93f82435b11f7377462e417","modified":1748401134000},{"_id":"source/img/cover-n.png","hash":"d6146e97c5eb4691b3b6d23da76afa68f040b207","modified":1748401134000},{"_id":"source/img/geojson.png","hash":"3a0c8d17457b1509a185d9ad737676031d405482","modified":1748401134000},{"_id":"source/img/git-mac.png","hash":"072214a1469f2df79870489e63aa44f23adbd8b3","modified":1748401134000},{"_id":"source/img/git-merge.gif","hash":"04f48ed0b79dd753d21f9983b07c5ed119afa9c3","modified":1748401134000},{"_id":"source/img/git-rebase-cover.png","hash":"c2948efd9f8c6b27b695003961ba2750e036e0a1","modified":1748401134000},{"_id":"source/img/github-action.png","hash":"cfa29dd23d8d8c84c46fbbd701e68dd3c85a4034","modified":1748401134000},{"_id":"source/img/github-secret-ssh.png","hash":"21de870476134f2ca3ee1bad5a1919c9b9edc415","modified":1748401134000},{"_id":"source/img/github-workflow.png","hash":"29a4012d49bfad285d6bbcea1c89e7793c3151c9","modified":1748401134000},{"_id":"source/img/github.png","hash":"778a3ed8febda0d4ed1620675a5b912a612a787a","modified":1748401134000},{"_id":"source/img/golang.png","hash":"ee7d6741222567743cb0d958a11cc2d355a2caec","modified":1748401134000},{"_id":"source/img/hash-1.png","hash":"5cf2cd0d68d42763dfdb68a58b6b1d3be9fb9c33","modified":1748401134000},{"_id":"source/img/hash-2.png","hash":"2b4698c259f9a68039ec0de0339ac08f2cc7c9a9","modified":1748401134000},{"_id":"source/img/hash-3.png","hash":"697b32246b24cd48ea5be2a89e3948e1fc23d4e9","modified":1748401134000},{"_id":"source/img/hash-4.png","hash":"dd8ccaff184144d9e81d8fa446bf076148dd218d","modified":1748401134000},{"_id":"source/img/hash-5.png","hash":"0a6b8b60b54aa891ca2434d04c14bd2349523833","modified":1748401134000},{"_id":"source/img/hash-6.png","hash":"f2eef993bcebee0370141c86b38d3542230daddc","modified":1748401134000},{"_id":"source/img/hash-7.png","hash":"d364b484bba82e36e0d5556d16a16639eeac3b4d","modified":1748401134000},{"_id":"source/img/hash-8.png","hash":"e27d7cd819b7fc05d20dee7fae50410df5606aa7","modified":1748401134000},{"_id":"source/img/hash.png","hash":"2991cabfac800157879368cbd92762c3e448fcaf","modified":1748401134000},{"_id":"source/img/hexo-server.png","hash":"c4805a1e1de2794845239e22523a03b1d9c64f61","modified":1748401134000},{"_id":"source/img/homebrew.png","hash":"1b59832e5a5cb3c343b1114d1be8456043ca716e","modified":1748401134000},{"_id":"source/img/lerna-publish.png","hash":"c66cd936056719bee8a7710b15ec585c1311cc22","modified":1748401134000},{"_id":"source/img/linux-node-1.jpg","hash":"1b22bc4f3fbcaa2281b0f822bc63cafc5763bf09","modified":1748401134000},{"_id":"source/img/linux.jpg","hash":"87375ca580ff89d295d15d32655af9dd7348eb5e","modified":1748401134000},{"_id":"source/img/mcp_scenarios.png","hash":"1a64f2275508e50b0a935e0c29a32c07bed24414","modified":1748401134000},{"_id":"source/img/my-divination.png","hash":"588128bd63df5ee3dc91af460941a552a682a4e7","modified":1748401134000},{"_id":"source/img/napkin-logo.svg","hash":"f1a25dc8d2240b8c3c9c1c2887d19bf0af0e00d8","modified":1748401134000},{"_id":"source/img/n.png","hash":"e4154238269937fa4cbea612ca09cbe9ba5f1652","modified":1748401134000},{"_id":"source/img/ngrok.png","hash":"b138c06df5dd1812c7cfa8617376b545c5dfad96","modified":1748401134000},{"_id":"source/img/node-git-version.png","hash":"5f9d26f78582a7cfd095a55800625cbf33b6085c","modified":1748401134000},{"_id":"source/img/npm-add-username.png","hash":"57e4552bd023598207eefedda04b0addf813a518","modified":1748401134000},{"_id":"source/img/oauth-app.png","hash":"982ba11648295f1620e06a4e81e78a633061d129","modified":1748401134000},{"_id":"source/img/oauth-cover.png","hash":"b1c80be1b114568f1b16911927c1b11c440f114b","modified":1748401134000},{"_id":"source/img/pm2.jpg","hash":"ad065fe88af074a5c52bc1d9d216fa9dbfbaac22","modified":1748401134000},{"_id":"source/img/shell-code-success.png","hash":"68e1a9cfcfba39bacfc302968fafdeba5914dd95","modified":1748401134000},{"_id":"source/img/shell-code.png","hash":"0314e718c4177d9bd8a8a61f8c86e0fb6fe2256c","modified":1748401134000},{"_id":"source/img/singularity.run.pyhton.1.png","hash":"e6e75282e8284906e25d9b774fbf5ac7c4f8cbf2","modified":1748401134000},{"_id":"source/img/ssh-key.jpg","hash":"269f8bef939b542ed0f5d72f60b54658ee23f01d","modified":1748401134000},{"_id":"source/img/switch-1.png","hash":"e82b5273ae736fdee6f82fc4463e01befb9df7e3","modified":1748401134000},{"_id":"source/img/switch-3.png","hash":"e05431cd539c785ea4c803d61b1a16988f83b243","modified":1748401134000},{"_id":"source/img/switch-guaishou.png","hash":"78350740a784d73285dcd3238d0d5d5e7838fbc8","modified":1748401134000},{"_id":"source/img/switch-feiji.png","hash":"3659f6231fa3afdb095636a8748b68f574ecec8f","modified":1748401134000},{"_id":"source/img/top-artical.png","hash":"1ceeec2791786c37623d01f2c0dca77ed077177a","modified":1748401134000},{"_id":"source/img/top-category.png","hash":"bff609dbaa3a4e4d36987dcdda37c101b8ef9e53","modified":1748401134000},{"_id":"source/img/top-tags.png","hash":"38a6e82f8e5c2f590ddf66af10ee7464f93f94cb","modified":1748401134000},{"_id":"source/img/ubuntu2004.png","hash":"55648f9a5d19304a5a09e7dbad2f55307ffdbded","modified":1748401134000},{"_id":"source/img/webgl.jpg","hash":"cbbb65732beb27b5cac2fdb600916b684184c854","modified":1748401134000},{"_id":"source/img/ubuntu-nginx.png","hash":"2297b506b967c7b4800c5327551563b92ad1d3f8","modified":1748401134000},{"_id":"source/img/软件架构设计与生命周期.svg","hash":"3b964c0bc4599e21486979d8f02eece6a15ca963","modified":1748401134000},{"_id":"source/music/index.md","hash":"4951a1e33174c956c48d31ffdea2aaaeb33020bd","modified":1749020761128},{"_id":"source/tags/index.md","hash":"5aba6faf582b0245537c33e3add7cdeb7fac80b0","modified":1749008085589},{"_id":"source/img/canvas-china.png","hash":"4bd6344a3e80ccb435b62e7e78b3294dce115623","modified":1748401134000},{"_id":"source/img/cf-wkrs-node-1.png","hash":"4c779b350b06900326029ff6a48be789655fbdf8","modified":1748401134000},{"_id":"source/img/cf-wkrs-node-11.png","hash":"5129635964ac713108abb8c8a7b8ffbc0db15ca1","modified":1748401134000},{"_id":"source/img/cf-wkrs-node-2.png","hash":"e113c46b437b83957fc9a7048e6a15952388375d","modified":1748401134000},{"_id":"source/img/cf-wkrs-node-8.png","hash":"7860ca7be02358f587a522fe67afe49ccc5a241b","modified":1748401134000},{"_id":"source/img/commitizen-1.png","hash":"705765c14de3e64c728e58251e8b150772fe4e2b","modified":1748401134000},{"_id":"source/img/commitizen-2.png","hash":"b167bf4baedc92344f025b23d025fee9ffb1d2f1","modified":1748401134000},{"_id":"source/img/cover-lerna.png","hash":"d903950d83af8fcb4a35bd48363f03168d88a2be","modified":1748401134000},{"_id":"source/img/deepseek-vs-OpenAI.png","hash":"a5fd23445bd855a843ad5cbdcd798483231dcd07","modified":1748401134000},{"_id":"source/img/deepseek.docker.png","hash":"2a9f1e666cd4763113e0de6ddcbdbda5d9a1998d","modified":1748401134000},{"_id":"source/img/deepseek.settings.png","hash":"d125267aaec5a11f2dc6809fb4d661498cd886f8","modified":1748401134000},{"_id":"source/img/deploy-dns.png","hash":"be09fc8c8115ef7eb98979e8a6330ca0839c423c","modified":1748401134000},{"_id":"source/img/dk-github-webhooks.png","hash":"d22647def2c8582e63450d674501dd1d888fa5ea","modified":1748401134000},{"_id":"source/img/dns-record.png","hash":"1b3638a1280bb367182dd49251cd2d9b088207f5","modified":1748401134000},{"_id":"source/img/dns.png","hash":"98044e06b8838313ccdaa21dc4456409de2a196e","modified":1748401134000},{"_id":"source/img/git-avatar.png","hash":"737f26aac596a179b5b83f23628a405c3b826934","modified":1748401134000},{"_id":"source/img/github-webhooks-trigger.png","hash":"71bcbc7a8e7fc9782bd7d0936551a7ac76080cc9","modified":1748401134000},{"_id":"source/img/github-webhooks-add.png","hash":"87c67c1a00e891f93deb36a7c48770160f31d189","modified":1748401134000},{"_id":"source/img/hash-9.png","hash":"af5da7b68976e682543e76f454a145a306b63cee","modified":1748401134000},{"_id":"source/img/hexo-deploy.png","hash":"20592b6d304737f14957d3415d6d297f683df056","modified":1748401134000},{"_id":"source/img/lerna-create.png","hash":"c7431b66ce97205607edfe6834e16b1afae25fdc","modified":1748401134000},{"_id":"source/img/loading.gif","hash":"f3ed6ebb365ad368e2e60baa4c497960b7ffec24","modified":1748401134000},{"_id":"source/img/macbook-01.png","hash":"41f4c9c009f9358536c59c262a0602a643e212d1","modified":1748401134000},{"_id":"source/img/my-squoosh.png","hash":"66b85b8654148b68272429a11e1e060cb4861821","modified":1748401134000},{"_id":"source/img/npm-add-organization.png","hash":"d826b0fc072af49dfae28e54bc6a5d15f9361382","modified":1748401134000},{"_id":"source/img/npm-home.png","hash":"a020640f1569d34b6b6d676b16ccf802bc7fb567","modified":1748401134000},{"_id":"source/img/oauth-github-app.png","hash":"c597ba929300e2a55b6834e982f150393b4e31f7","modified":1748401134000},{"_id":"source/img/pageAssist.png","hash":"4469250f5959f286765e1367f49de55a6702d75e","modified":1748401134000},{"_id":"source/img/racknerd.png","hash":"1cb07f27fc57dd8ef5d90445ab0b56f57204b105","modified":1748401134000},{"_id":"source/img/singularity.run.2.png","hash":"64bc37a542fef70416417fcfc4e53cf21a462f61","modified":1748401134000},{"_id":"source/img/ssl.png","hash":"5de5b146c5e0ec3de0417e8b8c30011ee5ccb7f2","modified":1748401134000},{"_id":"source/img/static_file.png","hash":"d4f7c075336ded3a4b5676fc0839314b8e18a283","modified":1748401134000},{"_id":"source/img/switch-4.png","hash":"35db93064abfdeb69546e6e22444e4de3d363cf7","modified":1748401134000},{"_id":"source/img/oauth-1.png","hash":"450f8e0767fb5bbdea4584a6c45296c5c2373551","modified":1748401134000},{"_id":"source/img/top-index.png","hash":"7cc03973d14d670bb2d7dd00ca4f54b61b7ea793","modified":1748401134000},{"_id":"source/img/top-tag.png","hash":"ff0f439da47944e54a1a91601658ec439bc97c14","modified":1748401134000},{"_id":"source/img/LangChain框架.png","hash":"e6e08d5bc3f37f82f7603b3a8c1280f146e20c11","modified":1748401134000},{"_id":"source/img/cf-wkrs-node-3.png","hash":"7b1e09abdcb91c144aed9d2bbcf3400992119378","modified":1748401134000},{"_id":"source/img/cf-wkrs-node-4.png","hash":"105ef53b4de6a07043ea1b23196c5bef9d738992","modified":1748401134000},{"_id":"source/img/cf-wkrs-node-5.png","hash":"ff20bd5966b05fbdccd7d05cf5cdd73bfeb217b8","modified":1748401134000},{"_id":"source/img/cf-wkrs-node-6.png","hash":"203c7810965ed318b27a809239bea320c2f63fc8","modified":1748401134000},{"_id":"source/img/deploy-cover.png","hash":"05db2eff87a7aaaab8b29ddac37e6d3fe02ca47a","modified":1748401134000},{"_id":"source/img/deploy-domain.png","hash":"bc2db7a732ba531f8a9c769817f1e83e20a8dadc","modified":1748401134000},{"_id":"source/img/deploy.png","hash":"a5052c3134b121e3ab7db14b4170113ff0638625","modified":1748401134000},{"_id":"source/img/git-rebase.gif","hash":"eb9ddfc624ec1edcdab30c6d6cdfbe8f06ca0a43","modified":1748401134000},{"_id":"source/img/mcp_with_chat.png","hash":"fffa3a414e0013a052e849219f8e9467341eeb95","modified":1748401134000},{"_id":"source/img/ollama.anythingllm.png","hash":"31c803c7c3a2caeb49bf40dd5a56ed776b0757a7","modified":1748401134000},{"_id":"source/img/canvas-animation.gif","hash":"c86745e5b51cda7de315aaa455c97541faf1a8eb","modified":1748401134000},{"_id":"source/img/cf-wkrs-node-10.png","hash":"6c971184c9293eb5187eacbf830f396ae80cb6a0","modified":1748401134000},{"_id":"source/img/cf-wkrs-node-7.png","hash":"e428461ec809f6e3116ddcf80fa1afc68a8f6f29","modified":1748401134000},{"_id":"source/img/frp.icon.png","hash":"7bd743e09f4af5f20a1b017950951047593185e7","modified":1748401134000},{"_id":"source/img/singularity.icon.png","hash":"62c8cbd0b837198896fa3a490d378029c68f8ead","modified":1748401134000},{"_id":"source/img/switch.gif","hash":"fedbfb2558947f02ec022d184974e33b45282233","modified":1748401134000},{"_id":"source/font/Pacifico-Regular.ttf","hash":"baca1fca7fe74b61cb33aa0da48ec1a3a77bcf49","modified":1748401134000},{"_id":"source/img/my-blog.png","hash":"a5b67b4edee0ec98215a411557fbf1833df65728","modified":1748401134000},{"_id":"source/img/my-twitter.png","hash":"e6861a635614368336ef738f14ad4eab95378be1","modified":1748401134000},{"_id":"source/img/top-default.png","hash":"a9f7909ca86049dd002e524ee95f4decd741f5fe","modified":1748401134000},{"_id":"source/img/linux-node-2.jpg","hash":"fb8e80856b3fb2329e73aa0370cf93d591ab0a6a","modified":1748401134000},{"_id":"source/img/yijing.png","hash":"f06ca6084ea5bd776856d275e0e10149ee5bed34","modified":1748401134000},{"_id":"source/img/ri_20250306_mlj001.png","hash":"42fc94b4a74f0f61675abacb0a83c64bbf4bc7b5","modified":1748401134000},{"_id":"themes/butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1748401134000},{"_id":"themes/butterfly/README.md","hash":"99faa42e2d500db7479a37d07a8c667ba4333531","modified":1748401134000},{"_id":"themes/butterfly/README_CN.md","hash":"65bb682b489f3ecb55603cb114176d9edd264cf8","modified":1748401134000},{"_id":"themes/butterfly/package.json","hash":"58bc9bed0954b9bc57c2fc741be7ff02c303c787","modified":1748401134000},{"_id":"themes/butterfly/_config.yml","hash":"d82a9f9c4e5f3e67811709b013b10077ca097139","modified":1748401134000},{"_id":"themes/butterfly/languages/default.yml","hash":"7ca673fb629ea74f5ba5e75b4f0f95248cfb5090","modified":1748401134000},{"_id":"themes/butterfly/languages/en.yml","hash":"cd333235ff1648a6bf58dfafc81f2c57672a15a5","modified":1748401134000},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"8a38556ce40296e473ecac26da7792ab7af6b656","modified":1748401134000},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"79a50c40d9f5463f1fa42aa870ac6b8b84540412","modified":1748401134000},{"_id":"themes/butterfly/layout/404.pug","hash":"58cfa5985e58e10c97a9f8a9dc354f1c766154b3","modified":1748401134000},{"_id":"themes/butterfly/layout/about.pug","hash":"233bc74b7be2bd16ec466a6acf2abec9094634d0","modified":1749006401751},{"_id":"themes/butterfly/layout/category.pug","hash":"60c1b795b6e227b5dd81963b51d29d1b81d0bf49","modified":1748401134000},{"_id":"themes/butterfly/layout/archive.pug","hash":"bd62286afb64a51c97e800c5945620d51605d5fa","modified":1748401134000},{"_id":"themes/butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1748401134000},{"_id":"themes/butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1748401134000},{"_id":"themes/butterfly/layout/post.pug","hash":"8d398c8925182699d9f2b9f1b727f06228488312","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"4156224c47bfc2482281ac4e4df701c30476ff00","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1748401134000},{"_id":"themes/butterfly/layout/page.pug","hash":"82aa988527a11835e7ac86ce4f23b8cd20014dfa","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"76d672c91f6bb6f20c6936e05067c42f7917ac61","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"aa105ea4eaecc951f7474b549b6ac0095a5fab1f","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"0b80f04950bd0fe5e6c4e7b7559adf4d0ce28436","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"97db3c16cbd71f74ba44cd05455820dd67198c7a","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"2e0ce8901edb8abf011443c62a71bd01d7e607c3","modified":1748401134000},{"_id":"themes/butterfly/scripts/events/404.js","hash":"3c30dbd8b910ce7d8d7d8353cf2266cbc5d8775d","modified":1748401134000},{"_id":"themes/butterfly/scripts/events/init.js","hash":"018aa446265fe627301b1d53d7cba4f4ff1960ac","modified":1748401134000},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"d575137c8779e50422c2416f4d0832fdea346ee6","modified":1748401134000},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"4cc2d517195c8779471d326ada09f9371cbad4dd","modified":1748401134000},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"9821872007cf57efae4b728dc575ef9d004547bb","modified":1748401134000},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1748401134000},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"e00efdb5d02bc5c6eb4159e498af69fa61a7dbb9","modified":1748401134000},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"81459adf885a15c6e9784bc2275c07efe67ab0b4","modified":1748401134000},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"1da73cd47b78c6dbc3f04ce500d6cc5711c94412","modified":1748401134000},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"54b9324e3506dcc9c9991ef5e11e37e66e21594f","modified":1748401134000},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"b816ded1451f28c7c54151ffe6c259b110253ae3","modified":1748401134000},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"94826ea6bcc4d2304199adae12c4e2b272caf529","modified":1748401134000},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"f33858ffb9e88191e644796e11d2f901eb332308","modified":1748401134000},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"a43ee2c7871bdd93cb6beb804429e404570f7929","modified":1748401134000},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"35f073021db93699fcac9ef351e26c59c31aadf7","modified":1748401134000},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"c16c6eb058af2b36bcd583b2591076c7ebdd51ad","modified":1748401134000},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"6c6e415623d0fd39da016d9e353bb4f5cca444f5","modified":1748401134000},{"_id":"themes/butterfly/source/css/index.styl","hash":"b039658d9a98d6bad0d9036d0ccd563b380867b4","modified":1748401134000},{"_id":"themes/butterfly/source/css/var.styl","hash":"40c3f64422205a24e68ce1ad8fe8163f24fdd525","modified":1748401134000},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1748401134000},{"_id":"themes/butterfly/source/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1748401134000},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1748401134000},{"_id":"themes/butterfly/source/img/favicon.ico","hash":"15a58c7b3bd913859362bc4627fc342d2e2dccfd","modified":1748401134000},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1748401134000},{"_id":"themes/butterfly/source/js/utils.js","hash":"41481019ef510c74e744f4f7ec4d0a13b5ccc04c","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"6c41f49a3e682067533dd9384e6e4511fc3a1349","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"90d01b88d0f406d00184960b1afe9230aec2ebe6","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"4def0aab9e2172ad1f29abd1535d8e08ff23aa0b","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"798dbbe9146e8e2379b39a49acf8c8a1eeabb8fb","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"e55f8bdb876d5429a908498db1307b94094c0d06","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"24370508ee87f14418e8f06e9d79ad8c52a342c4","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"c205b9fd72b2fe19e6d15c5b5ab0fb38c653032e","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"92f81a437c9db49f7ebcf608bc09488ecdb55a21","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"4a7a4ac0ea7e75afa50caf4b894982898f115ab4","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"0d953e51d04a9294a64153c89c20f491a9ec42d4","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/loading/loading-js.pug","hash":"4cfcf0100e37ce91864703cd44f1cb99cb5493ea","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/loading/loading.pug","hash":"5276937fbcceb9d62879dc47be880cd469a27349","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"2fb74d0b0e4b98749427c5a1a1b0acb6c85fadc4","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"4c3c5cb69b3aead8c232cb0fbc251929f28aad75","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"1f30952fed73dec21b42e2e30b7fe2e84618d2e4","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"dbec869c62135695495703a29ad7655e9965d461","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"a3ee4523c2fe6356d70fe683c5bc7d5c9f558159","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"93d4ebc7dc8228c7a10ddeb5a553d0dcdabbe145","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"88e3b611b03149665e4113cfa39595c1a3fca7e5","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"292646dfab135973b09f0fa9e3931e83da2ed30e","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"5b404356f311d2ee36478291ca3553210867b738","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"b9d54a01d7c2a7a183cb7209e99430ce7fea1fe3","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"6bf2fe064cfed3e2f5f6c7dc951d2f32bb9e0de1","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"d5fec7dedc52ab23865fb4db002755e9bdaadc9f","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"1fbecfd299068f90d727f0c8c65e2a792fa6e3e2","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"d50e5c22cd6bc3c378bc581918136746cfa3447f","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"08056b1fda0a0289d87cba4b3aad12efa61693ce","modified":1749007598080},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"1e88ca0aa40c5585f92ebf6ef90b6ba64ebb2510","modified":1749017942432},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"ae9336bf31cdad08ff586ead4295912a96563c76","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"36b368516b5a746be84a6aa08767ee24d220d509","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"9c1229af6ab48961021886882c473514101fba21","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/widget/card_self.pug","hash":"a1b2f5575b6804c5c4b9288db143b5164cbbd289","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"438aea3e713ed16b7559b9a80a9c5ec0221263df","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"0612aaee878f33ea8d3da0293c7dc3b6cd871466","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"9e91f2543ab39815309268d07ae248a78887acf9","modified":1748401134000},{"_id":"themes/butterfly/source/css/_aplayer/index.styl","hash":"b3acfcbd7ad67753c05d0628e05b61b33f706f1e","modified":1748401134000},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"da61042c27c3022df253518fef155f1b5cc6c136","modified":1748401134000},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"1159f0b728d904c4df133f4783abb14b48ef5522","modified":1748401134000},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"ce3d0c8984c8a46e3c8e1727806bb4d37ff3e2d4","modified":1748401134000},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"fa7a4c1685f391d60ed863e869b9604b59746c27","modified":1748401134000},{"_id":"themes/butterfly/source/css/_layout/404.styl","hash":"d6548e332e6e57e2a7ba2eb53cdd838c3cd1846d","modified":1748401134000},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"ff6e30d6219293fc9cc2a50994612dd0f9b36a06","modified":1748401134000},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"29f48f9370f245e6e575b5836bccf47eb5688d8b","modified":1748401134000},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"f1b63892baafa48ab872bc79671d57aafd511f6c","modified":1748401134000},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"3ea6c3c28c0cdaca8fabea9025e06bce836d54c7","modified":1748401134000},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"2b3160828ed7ff0e5627d60cd1eace97f6ca12ff","modified":1748401134000},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"7d18a7be9cfea65091de3ef00014063d2d649912","modified":1748401134000},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"90fe01c968696a9f791cb2b84fca621cbbb56f47","modified":1748401134000},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"e639219e12069f9a71c8f325364a8f656454b999","modified":1748401134000},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"0551c5893d1589a3d17ce161e50ecb1d724cc6e8","modified":1748401134000},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"ea1ba40dd5954c2ed718a126336fb7f94da4e66f","modified":1748401134000},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"7a072589e6097dbe942783131964f2372fdf1eb6","modified":1748401134000},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"7a6e1f21173022a3a1f18a62785cdd657a1af0a1","modified":1748401134000},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"788a28f68e29fad5328dc03be2f3268324281652","modified":1748401134000},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"b86a044af4ee41208586c84d99fdb2bad3628cda","modified":1748401134000},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"c2d35443807a121e20c7ac3c1caa50f848bacd59","modified":1748401134000},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"6874adc2e276443f354bbe50d0072e9bec37243c","modified":1748401134000},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"e554549f0a0ae85362f0b0e8687981741f486f6b","modified":1748401134000},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"a6f8637e90e44e23338209d4a3438e3e67766971","modified":1748401134000},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"d60b7a94a7adeac489b8c1afdf7e679994829742","modified":1748401134000},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"7c4152162a03aa8331a783df5695e4ebbb816a8c","modified":1748401134000},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9a881c031f463c486bd25248c2814fd09f97892b","modified":1748401134000},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"6b05ca4409d2dc09e123af4e0af9f9d0f7142b73","modified":1748401134000},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"89e744abc5e41f4855e7b87b13b854f4ec4ffc0e","modified":1748401134000},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"51f2bd03a2d0787911d0c090fb555a664b3fac8b","modified":1748401134000},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"1c3f9d7efc3b9dfcfa8926a1132d0c44ffc7d4b2","modified":1748401134000},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"53ecae272e16223a436c497abbf25dd5f0fc4aaa","modified":1748401134000},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d0386ba6d8d63afc72b9673e8f3e89df6446ffc2","modified":1748401134000},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"21964fdd6d74ffbea519418bab65024aee5f3736","modified":1748401134000},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1748401134000},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"86fee274a62f7f034547342930f445c47378eb55","modified":1748401134000},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"1756791581c0ec51cb03353a09dac4778d944349","modified":1748401134000},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1748401134000},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"65b45e61586f7e66c3f338370bfd9daadd71a4b7","modified":1748401134000},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"459e2541afda483916d16fce4aaa56b41bcd42ba","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d85c3737b5c9548553a78b757a7698df126a52cf","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"7848ec58c6ec03243abf80a3b22b4dc10f3edf53","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"e3bf847553515174f6085df982f0623e9783db7a","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"ef1b2b5b980d6aeaa5d06b97d1afc9644b155a16","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"76c061a16d7e5935f02acd27c6cdb4933c642b97","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"481cd5053bafb1a19f623554a27d3aa077ea59c3","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"bba9871f446c10ffcc8fa9023f5a2eb701a86bae","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"76634112c64023177260d1317ae39cef2a68e35f","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"cfe63e7d26a6665df6aa32ca90868ad48e05ec04","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"d1d2474420bf4edc2e43ccdff6f92b8b082143df","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"3f05f8311ae559d768ee3d0925e84ed767c314d3","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"24a926756c2300b9c561aaab6bd3a71fdd16e16d","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"a111407fdcafcf1099e26ffa69786f8822c5d9fb","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"2e52c64e89f16267596a8465841dd46f51820982","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"0b7571919e8ad51285deda56a1868fccf8c563d7","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"353ebd0bdecdfde6dee32c3aa208cc87c72b15c0","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"da9813f8dc0d388869c15413cf056012cfb69e1a","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"bafb3d5710824caa59a56017afb058fd2b4eac65","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"16378d8646ea3f4ac99c18f0296dd85b13f9d775","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"b871ea208e36398b4d668db9a9a0b61c79415381","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"2b45fe09d5b591dca156b76dae99981f8d8e1c61","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"87b097f791f56ca17319657de7901853b798555d","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"4afc12ce42d067fa4012039aa444343a36f73599","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"21b7ec96c606823d3d72e72775495ef77502b4cb","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"3f3a3cd8bea2103dedd754f767aca5cb84d5f586","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"9820d731bb66a1d9c2e0083361d0c99c68c93fdf","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"b1046b829e93225404349930ef0a216a8d81c47e","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"18dcf05ab58107bbff426376aef2577f59583fc2","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"cb38ffe911023092a90a28f2ba8317a92b22cd0c","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"59b4c26a827ace5a54855881d199977103ff6f50","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"9657b1b08ff3f98e49ca250ed47a81b8b202ac7a","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"d8f59e94eafc669c49349561dc5bbea3915aecb7","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"da3b9437d061ee68dbc383057db5c73034c49605","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"613280d61b8ab9612014ec016ae3d3698d36fd1a","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"309f51bc5302e72fc469d54c577fbcfe57fb07a8","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"006acc91ce25fc7c7d778ca043e970f57dc46b83","modified":1748401134000},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4c4a9c15215ae8ac5eadb0e086b278f76db9ee92","modified":1748401134000},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"8c0726fb8d9a497d2f900b0be2845efaa68e3d87","modified":1748401134000},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"89cbcc8e087788ecec18b5fa58710afacdb7d080","modified":1748401134000},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1748401134000},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"e0e7065124ef0d99f8322a47bc47838982e04ad0","modified":1748401134000},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"8970cc1916c982b64a1478792b2822d1d31e276d","modified":1748401134000},{"_id":"themes/butterfly/source/js/main.js","hash":"31467612b20a2009175cd7c423d94718d5c89d41","modified":1748401134000},{"_id":"source/img/my-github.png","hash":"6126057b7750c7f5af93c0425f6df6fc274159bb","modified":1748401134000},{"_id":"source/img/mcp.png","hash":"d70254bbae850902626f241c916f4ff05555ad45","modified":1748401134000},{"_id":"source/img/LangChain-from-zero.png","hash":"ec8a64a8f5beea7e44a5fa21c03dbc2bd5bbfad7","modified":1748401134000},{"_id":"source/img/jj2.png","hash":"71311915c822f366a5787ecae9a93509b683a7b6","modified":1748401134000},{"_id":"source/img/jj.png","hash":"eb6941c85c5d9063f38213c017cbcee0c32c3502","modified":1748401134000},{"_id":"source/img/switch-2.gif","hash":"dff7c92f00c260e620a8618782d91df8eb66c704","modified":1748401134000},{"_id":"source/img/switch-5.gif","hash":"c8dede0016b9f20ab8f0fda1474f19f655190d18","modified":1748401134000},{"_id":"source/img/commitizen-3.gif","hash":"c15f8a930c8f4cca6613be5f216cbea6ebc11de0","modified":1748401134000},{"_id":"source/img/switch-6.gif","hash":"40f1b24a568bbd68440a6874be2e6c0a31d46c32","modified":1748401134000},{"_id":"public/css/fps.css","hash":"a4827c1ddb3005bed59fa079750a97fef739d6b1","modified":1749020596198},{"_id":"public/search.xml","hash":"a819ee8ab2ca4cc5cf6ccc9ce3171b6e36716ff3","modified":1749020596198},{"_id":"public/404.html","hash":"2f6198ab9cfeecce6dd23bcdad99e928b5620f9e","modified":1749020917467},{"_id":"public/about/index.html","hash":"0a55bc96e18bd9523bc74647b31373a467c3b02d","modified":1749020917467},{"_id":"public/categories/index.html","hash":"3088347c2de3f52ca019091108d7afd9724adfc2","modified":1749020917467},{"_id":"public/tags/index.html","hash":"40f51c2fd034791b176e26c957ffa7e6271edd93","modified":1749020917467},{"_id":"public/music/index.html","hash":"f98a10eaead76ab2ed0622e9a299f29575eb351b","modified":1749020917467},{"_id":"public/2025/05/25/从大语言模型到 LangChain/index.html","hash":"13f61bd7e0c930106e497e244079007513adf4fd","modified":1749018223170},{"_id":"public/2025/04/15/零工经济的崛起/index.html","hash":"ced050062e290e783f84458abe0a54e077b59815","modified":1749018223170},{"_id":"public/2025/04/08/初窥MCP/index.html","hash":"89600516d7db31d4d80c9b79f38cd8831fad4969","modified":1749018223170},{"_id":"public/2025/03/26/AIToolsSet-Napkin实现文本可视化/index.html","hash":"38c8dde513ddcbf2e15989c7955e4536fd494374","modified":1749018223170},{"_id":"public/2025/03/06/20250306_日记_梦搂记/index.html","hash":"b225dd858270aaa2a2db0140461be59cbccaafae","modified":1749018223170},{"_id":"public/2025/02/05/deepseek本地安装/index.html","hash":"688712af45102c1f87e1d75b8a8292e68d65ab32","modified":1749018223170},{"_id":"public/2024/11/06/singularity/index.html","hash":"617f3708ca837b0eca8d19d17f394f38385150d4","modified":1749018223170},{"_id":"public/2024/10/24/frp内网穿透/index.html","hash":"f81fa39c0e3bdcc562b0d7c2070ec1e305edb2e7","modified":1749018223170},{"_id":"public/2024/10/22/快速搭建静态文件服务/index.html","hash":"b7d2f48b59d4794b66fa338808b03eed547e023c","modified":1749018223170},{"_id":"public/2024/10/20/git/index.html","hash":"31e69e1b6e7a0591f8838b947b010e7310c37c8d","modified":1749018223170},{"_id":"public/2024/10/19/celery/index.html","hash":"1d0a8b3ae5dc55357c8aecadc157af54fce7ec8d","modified":1749018223170},{"_id":"public/2024/10/19/docker镜像优化/index.html","hash":"74e50e05a72c370e79a357579ffbcc1d77d9fb90","modified":1749018223170},{"_id":"public/2024/09/26/docker/index.html","hash":"d644d797e8dacc8d760c10b2d09b22a4b251ee6d","modified":1749018223170},{"_id":"public/2024/09/20/hash/index.html","hash":"a7a1836038183bbaca8555b39055df9592c930a2","modified":1749018223170},{"_id":"public/2024/09/06/go/index.html","hash":"c89a07a0f36337d7031a6bfc1cbc125e3860cefd","modified":1749018223170},{"_id":"public/2024/05/06/node-n/index.html","hash":"2510704ad23eef6abf7ef1cb64d68fd96d1b15af","modified":1749018223170},{"_id":"public/2023/11/28/pm2/index.html","hash":"703212a7d5a91048dee4dae7d1042a421f1f04dc","modified":1749018223170},{"_id":"public/2023/11/27/linux-nodejs/index.html","hash":"4bffddf3286a5dd85b0ffd34090028050a16f615","modified":1749018223170},{"_id":"public/2023/11/26/linux/index.html","hash":"d8a599ca2a55e4c7397a667bd495e976e46bbbc4","modified":1749018223170},{"_id":"public/2023/10/27/cf-wkrs-node/index.html","hash":"06c8f9e4a2fc01f4cd9b75c72536050ca8f4250e","modified":1749018223170},{"_id":"public/2023/10/24/ubuntu20.04/index.html","hash":"1f7263a017914b8097199eec15d35409935fe1d6","modified":1749018223170},{"_id":"public/2023/10/10/geojson/index.html","hash":"a76ce50a641930339fd1723e97a25952864852f7","modified":1749018223170},{"_id":"public/2023/10/08/canvas-geojson/index.html","hash":"246100921fb6fc04fbdd21f929434a8a74b1e176","modified":1749018223170},{"_id":"public/2023/09/28/canvas/index.html","hash":"19adc33de12a796fff5e99c3c4d7f46e2d3af2a6","modified":1749018223170},{"_id":"public/2023/09/22/switch/index.html","hash":"791d72f3592f18b67484e77dffd1c9f8accd92f1","modified":1749018223170},{"_id":"public/2023/09/07/github-workflow/index.html","hash":"f2b0ad104e1038bd26d8b8c2705a6001b56ec98c","modified":1749018223170},{"_id":"public/2023/09/02/blog/index.html","hash":"e75b7c4948483fdfe16a702557f971ca3aa82dff","modified":1749018223170},{"_id":"public/2023/06/02/webgl/index.html","hash":"7575b0c86d7dcf0f25af6cfdf915132a9347d404","modified":1749018223170},{"_id":"public/2023/03/25/git-mac/index.html","hash":"d09a11329d025db741ccb106113a2fd4c2b04adb","modified":1749018223170},{"_id":"public/2023/03/25/homebrew/index.html","hash":"00acde8c6d2688e6b12f40f5437efae602250d8c","modified":1749018223170},{"_id":"public/2023/02/14/nginx/index.html","hash":"8396c7a4d2b50289959780693134971d0dfa808b","modified":1749018223170},{"_id":"public/2023/01/26/code/index.html","hash":"3ac9d4f2c8a3a33d6b5558bb0f05c36519ff9377","modified":1749018223170},{"_id":"public/2022/12/29/git-rebase/index.html","hash":"fa89b09f4a1726fb39b088ea83b80d55772bcbc8","modified":1749018223170},{"_id":"public/2022/05/31/oauth/index.html","hash":"e210327c64940ef3eb88eae045c696bc8bec5ff3","modified":1749018223170},{"_id":"public/2022/03/16/serverless-devs/index.html","hash":"b20254ec522f03dcd22a8794c59f0a916aa3c9c9","modified":1749018223170},{"_id":"public/2022/03/02/regexp/index.html","hash":"74303cd3acb080729b4b0576f5ac512ada184102","modified":1749020596198},{"_id":"public/2021/08/12/github-webhooks/index.html","hash":"f012492422de44a0dfdbb6875fcb51b373d281ce","modified":1749018223170},{"_id":"public/2021/08/10/babel/index.html","hash":"1ff09b620ba1f96bdfc3aee82614619fb6a3032f","modified":1749018223170},{"_id":"public/2021/06/09/commitizen/index.html","hash":"ea371fb98b5eedfd7448511bc88680822fbc84be","modified":1749018223170},{"_id":"public/2021/06/02/lerna/index.html","hash":"01b580fe5b38947d3004acb808ecc0dcd2645c99","modified":1749018223170},{"_id":"public/2021/06/01/2.位运算操作-取反/index.html","hash":"e95562172ab0e85e7f33521c8aa137eb501641ee","modified":1749018223170},{"_id":"public/2021/05/05/deploy/index.html","hash":"d1b13bbdc33b557ecc4cf01f7b5110ef4169ea57","modified":1749018223170},{"_id":"public/2021/05/04/mac安装sshpass工具实现免密操作/index.html","hash":"5227c110971c78e672cb5fce34ef19a8bf2584ed","modified":1749018223170},{"_id":"public/2021/04/26/github.io/index.html","hash":"26bb57497479269ad2e83d7a1341511962e79b9d","modified":1749018223170},{"_id":"public/2021/04/24/1-Kubernetes一主二从集群搭建准备工作/index.html","hash":"1b3be9415207177e1fcf8d86f24e24c453155251","modified":1749018223170},{"_id":"public/2021/02/19/translate-go内存模型/index.html","hash":"467c7bce003f2844babe07930fc6f1fc42bdbdea","modified":1749018223170},{"_id":"public/2021/01/19/Go-IoC与委托/index.html","hash":"e8ac161f0cf504ac32c44f54a9c4885ff4a2a8db","modified":1749018223170},{"_id":"public/2021/01/17/Go-模版方法模式/index.html","hash":"1e3682e2779adfcbf487f3a2fc8ba3c2446f37d7","modified":1749018223170},{"_id":"public/2021/01/13/Go-设计模式-门面模式/index.html","hash":"a8fbd6d799256af8e86c13435137206a6b8ae946","modified":1749018223170},{"_id":"public/2021/01/07/Go性能分析工具/index.html","hash":"1628e01ed04eafac38d907e82b89342431382d62","modified":1749018223170},{"_id":"public/2020/12/24/Go可选参数的使用技巧/index.html","hash":"c21a6e2bdf6741cd25e782051cdfefca45b21ae3","modified":1749018223170},{"_id":"public/2020/12/16/Go-chapter1-gRPC概述与发展/index.html","hash":"ae29c64466cefa4d0ac1ff998978be3ff5e8a0c9","modified":1749018223170},{"_id":"public/2020/12/15/InfluxDB基础概念与应用(一)/index.html","hash":"7d80732f2fda615f743d77579dc9dc1782eb7548","modified":1749018223170},{"_id":"public/2020/12/12/Go-protoc使用生成文件/index.html","hash":"2b41f2e6cad19c0b380a7544df8fcb0eeb74c57d","modified":1749018223170},{"_id":"public/2020/12/10/Go-项目工程态Kratos初始化项目脚手架/index.html","hash":"a0ca80c90d3feb843297c42e8bc222e7238ace7c","modified":1749018223170},{"_id":"public/2020/12/07/Golang-GC 三色回收机制与混合读写屏障/index.html","hash":"8b047e13a2a88e7bc02dc686a62986e8f6f06062","modified":1749018223170},{"_id":"public/2020/11/24/Redis延时队列/index.html","hash":"952c966165e286e7ce927ac0cf674ff132877f00","modified":1749018223170},{"_id":"public/2020/11/22/Redis分布式锁/index.html","hash":"652b217d7be5765a8675a15b97a989e7f189e4ed","modified":1749018223170},{"_id":"public/2020/11/21/并发性能测试工具Jmeter的使用/index.html","hash":"b72cdcaf306855a56acce8a9d8afdce7543c1a1f","modified":1749018223170},{"_id":"public/2020/11/18/Redis的基础数据结构/index.html","hash":"ab3b76792d2806fb887c2a100d4a230df82618fb","modified":1749018223170},{"_id":"public/2020/11/14/golang-高级函数的使用细节/index.html","hash":"4aa35a596d49edd2df9ed33a053ee4a187a298e3","modified":1749018223170},{"_id":"public/2020/11/13/golang中go mod使用解决导包路径/index.html","hash":"1860cfa3ddba90cb129a78ce2d6f90834e653dbc","modified":1749018223170},{"_id":"public/2020/09/02/2020-08-30-计算机系统知识(一)/index.html","hash":"844387b2c2a34e91b0d83673fe7058360c1072ba","modified":1749018223170},{"_id":"public/2020/09/01/2020-09-01-Mac-Application快捷键神器/index.html","hash":"9c23433197312d98b7007ea5ae59468b55e9f5ff","modified":1749018223170},{"_id":"public/2020/08/31/2020-08-31-leetcode-15-三数之和/index.html","hash":"71b68db56c053c88d3278bfd4be5f6906e97e8fd","modified":1749018223170},{"_id":"public/2020/08/31/图床-七牛云和gitbub使用/index.html","hash":"dba8a20d661e732bdae75eeed556f437ac0a2af1","modified":1749018223170},{"_id":"public/2020/08/30/2020-08-30-leetcode-8-字符串转换整数(atoi)/index.html","hash":"8a58422b9111418d169fb5ec969083d33678712e","modified":1749018223170},{"_id":"public/2020/08/29/2020-08-29-leetcode-7-字符串Z字(V字)输出/index.html","hash":"04e32508c2cfd321c61ca100faa2566dd9501d1b","modified":1749018223170},{"_id":"public/2020/08/26/求最长公共字串及其起始位置/index.html","hash":"1f688063ae25b0ce88fa038d955c7dccba100fe0","modified":1749018223170},{"_id":"public/2020/08/25/2020-08-25-python使用位图对数据进行排序/index.html","hash":"7b13e40e1ddde2ce548aa7f14bed5ce173829cf3","modified":1749018223170},{"_id":"public/2020/08/18/Golang调度器GMP原理与调度全分析/index.html","hash":"69f300b6d8758d6b9f49d8e3b09f92895ca870e7","modified":1749018223170},{"_id":"public/2020/08/13/并发常见问题/index.html","hash":"f748bdfcea8fabd6014b64bd3c2379edf89cbeb1","modified":1749018223170},{"_id":"public/2020/08/11/2020-08-11-leetcode-2-两数相加/index.html","hash":"a23d7ec4304eb66e9cbb47b1adb9021464b00b73","modified":1749018223170},{"_id":"public/2020/07/04/golang反射reflect的使用/index.html","hash":"81eae573a2e9898e33c8d367834cbd2ac6bad90c","modified":1749018223170},{"_id":"public/2020/07/04/将有序数组放入到二叉树中/index.html","hash":"134745a48caef6199d2390dac62e648449d3c55d","modified":1749018223170},{"_id":"public/2020/07/01/递归实现栈逆序/index.html","hash":"27745d88bc6d39cf9f809da804ba8693b683c0d4","modified":1749018223170},{"_id":"public/2020/06/30/双栈实现一个队列/index.html","hash":"99545e9ed149199ef66474317c9fccd8251ffafb","modified":1749018223170},{"_id":"public/2020/06/29/设计一个有getMin功能的栈/index.html","hash":"90763b2999e759f96d5a1fe5bd77687e47b8032a","modified":1749018223170},{"_id":"public/2020/06/17/postgres安装教程/index.html","hash":"c4eae8c16a24374a52c3a324023d67c79f0fecaa","modified":1749018223170},{"_id":"public/categories/云原生/index.html","hash":"89d04d82a9dd3c278e1dae02b9ac6fa06b45719e","modified":1749018223170},{"_id":"public/categories/数据结构与算法/index.html","hash":"d745119fec0126244f2d3f1ba03ed22c6954181c","modified":1749018223170},{"_id":"public/categories/软考基础/index.html","hash":"18cbb48f7698c3c7e43cbd24b752ae53886225f7","modified":1749018223170},{"_id":"public/categories/Python/index.html","hash":"1c735d4ebb6b01c6935af1b66163bd75d4a27507","modified":1749018223170},{"_id":"public/categories/辅助工具类/index.html","hash":"279718bc52918f4db7182a06a944af74c46c03b6","modified":1749018223170},{"_id":"public/categories/日记/index.html","hash":"aee3aec75a765070197dfd7a41103a48cb81d8e8","modified":1749018223170},{"_id":"public/categories/AI工具/index.html","hash":"3573acbbcd3338441b721fb7729348fe7e1b7f87","modified":1749018223170},{"_id":"public/categories/Golang/index.html","hash":"6dcb6037f6aad7d2ae7f46f03cb8175cf409480d","modified":1749018223170},{"_id":"public/categories/Golang/page/2/index.html","hash":"562358898412b650ea2cab67a7ad088118b602da","modified":1749018223170},{"_id":"public/categories/微服务/index.html","hash":"afd439d96b2e9222341268802a302f774300d537","modified":1749018223170},{"_id":"public/categories/设计模式/index.html","hash":"024b99a351ef6ee85d41c2b9fc0e2b4ce95576a5","modified":1749018223170},{"_id":"public/categories/数据库/index.html","hash":"b16ad71138036ea0721f625b258fb57224da2b0a","modified":1749018223170},{"_id":"public/categories/日记/异梦录/index.html","hash":"aa9c75e49fc0ca776ab9f6c71d024eff6acc0f7d","modified":1749018223170},{"_id":"public/categories/Redis/index.html","hash":"50f4f373d1519bb686129ba4422e90eb4adac719","modified":1749018223170},{"_id":"public/categories/AI工具/AI-Tools/index.html","hash":"3ad6f13d7cfba787fb0dbf457845c9841bc413aa","modified":1749018223170},{"_id":"public/categories/学习笔记/index.html","hash":"249357960f44aee9afa57ad8b7799630830ad5b4","modified":1749018223170},{"_id":"public/categories/博客/index.html","hash":"9900232de5d3ef0b37347d712d8061b4595841e7","modified":1749018223170},{"_id":"public/categories/技术研究/index.html","hash":"7061dab0b9952add9f43fb499aa415fdbb4a8523","modified":1749018223170},{"_id":"public/categories/实用教程/index.html","hash":"306e4f2c4cb213990d95b7b141b531ffd6ad909e","modified":1749020917467},{"_id":"public/categories/实用教程/page/2/index.html","hash":"a88c05fdee8dbb944a2eb5279262d741e9827691","modified":1749018223170},{"_id":"public/categories/消息队列/index.html","hash":"c5837b4b1bcd1ab948a0aa26392298fd5f0e5933","modified":1749018223170},{"_id":"public/categories/DeepSeek/index.html","hash":"83ac854e19f8384e61d0c0e02c7d47551aaf8f51","modified":1749018223170},{"_id":"public/categories/FRP/index.html","hash":"0c4e39e9eb74c12ac6fd54ae873964db7956e8b2","modified":1749018223170},{"_id":"public/categories/Linux/index.html","hash":"543a39b81948a440438e7d99164d3558a99d3ed2","modified":1749018223170},{"_id":"public/categories/HPC/index.html","hash":"42d2e8614e38ffeb313940c42b2fcaa9df4bf23e","modified":1749018223170},{"_id":"public/categories/LLM/index.html","hash":"9571d98e63369dcb0ca62e248e9e674bb6ebc7d2","modified":1749018223170},{"_id":"public/categories/LangChain/index.html","hash":"a29c78ae47a828c8e41c63fdbc4bf84f6a7d0587","modified":1749018223170},{"_id":"public/categories/GO语言并发之道/index.html","hash":"002a893add3822ff77670e752381acd4f6a17e18","modified":1749018223170},{"_id":"public/categories/静态文件服务/index.html","hash":"95674843b40bc59a2c20096d37f9dd74c08eb6e1","modified":1749018223170},{"_id":"public/categories/消息队列/Python/index.html","hash":"f439a5c03a9e8f1a69f949ed0e9d3972479d30f1","modified":1749018223170},{"_id":"public/categories/DeepSeek/AI/index.html","hash":"0be4dcbeb2617431add4224ebc29296a0d0b4cc6","modified":1749018223170},{"_id":"public/categories/FRP/网络/index.html","hash":"19d440fcfeae42ba059949b2bdf32e4ced36d165","modified":1749018223170},{"_id":"public/categories/Linux/Git/index.html","hash":"d8cc140e094083f4d4ec4ce927b50764f74029bc","modified":1749018223170},{"_id":"public/categories/HPC/容器/index.html","hash":"b78c597133b8857277bf5bb8a72ffa9e9169f1e1","modified":1749018223170},{"_id":"public/categories/LLM/大模型/index.html","hash":"c34e655aef616b41fede2f4eb84b169e7ec81069","modified":1749018223170},{"_id":"public/categories/LangChain/大语言模型/index.html","hash":"e7d9400ca693aded280fc5ed5270fa3fa495773b","modified":1749018223170},{"_id":"public/categories/静态文件服务/Python/index.html","hash":"b059b44f57f2bebfd2b611967a16ccce98c0ed08","modified":1749018223170},{"_id":"public/categories/LLM/大模型/MCP/index.html","hash":"48b257ff0edcd4beb6e8541d75a3e7eadafdf14e","modified":1749018223170},{"_id":"public/categories/LangChain/大语言模型/LLM/index.html","hash":"b358691e9239a0019f699f13c09863a78166217a","modified":1749018223170},{"_id":"public/categories/静态文件服务/Python/Go/index.html","hash":"165ee27ea536d2e7dfa0e772f5e562c4159c8774","modified":1749018223170},{"_id":"public/categories/LLM/大模型/MCP/AI/index.html","hash":"992efb94e2b2dafe68e8430d4b5ecc261b331d3c","modified":1749018223170},{"_id":"public/categories/经济/index.html","hash":"4d2199970970c22f9f590d01a1484cd231db4634","modified":1749018223170},{"_id":"public/archives/index.html","hash":"078edda28065427fdd576f6d3f0bbec45d06421f","modified":1749020917467},{"_id":"public/archives/page/2/index.html","hash":"110fcb0870deef174635037239e6a713b63f2d05","modified":1749018223170},{"_id":"public/archives/page/3/index.html","hash":"732405bf53b6679e9bbc4fd01b14cb65d57415cd","modified":1749018223170},{"_id":"public/archives/page/4/index.html","hash":"f9bebe637ac2dcab9e66bf7914c80f97305e2baf","modified":1749018223170},{"_id":"public/archives/page/5/index.html","hash":"0f5fe355c6d4d08128ce78daf8700002cc81abda","modified":1749018223170},{"_id":"public/archives/page/6/index.html","hash":"17eb70f90977d5ea35bd25853be53c411296b34e","modified":1749018223170},{"_id":"public/archives/page/7/index.html","hash":"f1aa89ff125b64fab3b5bbb50b820dcf08ca61b0","modified":1749018223170},{"_id":"public/archives/page/8/index.html","hash":"c15247953b52df583d575dfaf56ffe90c5b26042","modified":1749018223170},{"_id":"public/archives/2020/index.html","hash":"f5b1c22c95bc0142ff3788a0037544a8c8ac010b","modified":1749018223170},{"_id":"public/archives/2020/page/2/index.html","hash":"0ee392b50ea36ca30fd2007241cbf16f87e00369","modified":1749018223170},{"_id":"public/archives/2020/page/3/index.html","hash":"bd18290d07ed1f0cd97421161f49de2767128339","modified":1749018223170},{"_id":"public/archives/2020/06/index.html","hash":"25766b49e61e27753da841c91a0d926720867265","modified":1749018223170},{"_id":"public/archives/2020/07/index.html","hash":"e4c19295cdb5ce5969f34abf96b5bcdeed4af8a1","modified":1749018223170},{"_id":"public/archives/2020/08/index.html","hash":"cdc5e5bf8c1475816573cfd46d96476a92c069f4","modified":1749018223170},{"_id":"public/archives/2020/09/index.html","hash":"89589a07334e3c43686dd0e2d1cea354a34efb37","modified":1749018223170},{"_id":"public/archives/2020/11/index.html","hash":"f4a2d35bfa897956ea1a00b628285e35f81521c2","modified":1749018223170},{"_id":"public/archives/2020/12/index.html","hash":"844c22e69ccf800274456827aa2296f20b5d2e0f","modified":1749018223170},{"_id":"public/archives/2021/index.html","hash":"eb9ed2c62249d806aeaa9cfaf6c459de06f50391","modified":1749018223170},{"_id":"public/archives/2021/page/2/index.html","hash":"020fcb382b78f4c36f5077b019b8ece78c15b96e","modified":1749018223170},{"_id":"public/archives/2021/01/index.html","hash":"fd3614db21abee157a90bf10bab06d7ab5e82e70","modified":1749018223170},{"_id":"public/archives/2021/02/index.html","hash":"062563c5bf33c435e81378b671c4f4bd96880959","modified":1749018223170},{"_id":"public/archives/2021/04/index.html","hash":"6f1f6f39f2d9420dac282ca1c26d6360b7e7533e","modified":1749018223170},{"_id":"public/archives/2021/05/index.html","hash":"d85cc082025b619a040a9f61754f2ccc3808730a","modified":1749018223170},{"_id":"public/archives/2021/06/index.html","hash":"9ccb90979dba350924df6b1f363347111d05a2ba","modified":1749018223170},{"_id":"public/archives/2021/08/index.html","hash":"a06fae422bc60c4b8639d585af2ec89dfe48de65","modified":1749018223170},{"_id":"public/archives/2022/index.html","hash":"b398f867e3046871091bd042da59493ff28190dd","modified":1749020917467},{"_id":"public/archives/2022/03/index.html","hash":"cc40bb11b4bf1ad206a8e8c4cde4b3c4013e5751","modified":1749020917467},{"_id":"public/archives/2022/05/index.html","hash":"eb573d3721da3ed694aecc21ddddee2db9df1a76","modified":1749018223170},{"_id":"public/archives/2022/12/index.html","hash":"3fc560d729957ac6c1515e0d761f25a3e25aca4b","modified":1749018223170},{"_id":"public/archives/2023/index.html","hash":"cf625764013802c71572b723a3383c9149b8272d","modified":1749018223170},{"_id":"public/archives/2023/page/2/index.html","hash":"ef860d5fb5d3dacac22c73b73d11baee600fd6ec","modified":1749018223170},{"_id":"public/archives/2023/01/index.html","hash":"767f8ab01f1cdb18b53a92c153d30b55daa9ca03","modified":1749018223170},{"_id":"public/archives/2023/02/index.html","hash":"d24f9c52e888195966b4bbe3b5332d3bc45d0d44","modified":1749018223170},{"_id":"public/archives/2023/03/index.html","hash":"a4e21ec6af8fb8746089f09b8fe1766add13aaeb","modified":1749018223170},{"_id":"public/archives/2023/06/index.html","hash":"af727c5ec96ea131fa0fead3e83c1c53e02642e0","modified":1749018223170},{"_id":"public/archives/2023/09/index.html","hash":"cce49098dccaf5109f4b02b08e41be2293170807","modified":1749018223170},{"_id":"public/archives/2023/10/index.html","hash":"9b8872ee828af77aaaa354da986bc357dd90d8f5","modified":1749018223170},{"_id":"public/archives/2023/11/index.html","hash":"c339cb1000dacd02f28949154b0c3be93901087d","modified":1749018223170},{"_id":"public/archives/2024/index.html","hash":"39bde865dd9cfd2cbed8c3f5942cb4c77d08cbac","modified":1749018223170},{"_id":"public/archives/2024/05/index.html","hash":"6e5085e8a0a2841a90d2d8970bb357c6ea56c708","modified":1749018223170},{"_id":"public/archives/2024/09/index.html","hash":"5894f163727df61fe8b1ad01ba08c4ec28761a00","modified":1749018223170},{"_id":"public/archives/2024/10/index.html","hash":"5c1bb5d2864b279791c760c33da29a2fe3132c90","modified":1749018223170},{"_id":"public/archives/2024/11/index.html","hash":"40db6b564aab0320bbccfedebb0e06612533c495","modified":1749018223170},{"_id":"public/archives/2025/index.html","hash":"b4ba5150124c0b9e8bc7f16e95b80cde2997e067","modified":1749018223170},{"_id":"public/archives/2025/02/index.html","hash":"236c2e3e8c05bb47ad7d8cd43b4852bbb8b50f84","modified":1749018223170},{"_id":"public/archives/2025/03/index.html","hash":"28a9e941533a5e771d4e13fb6d453e02cc34f9b7","modified":1749018223170},{"_id":"public/archives/2025/04/index.html","hash":"7aeadad35c906a80ed299e5417cbb2c76076afd7","modified":1749018223170},{"_id":"public/archives/2025/05/index.html","hash":"403708ffbc7937a9f583c8407f5e08473953e42b","modified":1749018223170},{"_id":"public/index.html","hash":"a6debf45e72fc841deb8529d0b06ef73c3a72923","modified":1749020917467},{"_id":"public/page/2/index.html","hash":"99990287c820fd190f34d69b137edf2b152c367f","modified":1749018223170},{"_id":"public/page/3/index.html","hash":"503ae5a67e3c7848ce8efdd39ea23f5df53df903","modified":1749018223170},{"_id":"public/page/4/index.html","hash":"a134b20cdffd7448bb52033458218e6f1a054d03","modified":1749018223170},{"_id":"public/page/5/index.html","hash":"d51aa291eee4d63c2f0ccb0190d793470a11d656","modified":1749018223170},{"_id":"public/page/6/index.html","hash":"9d469025549fc2dd201f23d826058a393ec73b6d","modified":1749018223170},{"_id":"public/page/7/index.html","hash":"4848480ba43fcfb951bdbe4182e48f165e3e03aa","modified":1749018223170},{"_id":"public/page/8/index.html","hash":"956e32ee370eca16057802f9abe6665fc9f907ea","modified":1749018223170},{"_id":"public/tags/Cloudflare/index.html","hash":"bfe0e8b2b4e4ccd656d5a088c9f583ff99cc8efc","modified":1749018223170},{"_id":"public/tags/workers/index.html","hash":"79230c5473f1c94760d72b14fa1914be1e22bc46","modified":1749018223170},{"_id":"public/tags/pages/index.html","hash":"e0284666bdba079d4100e8458c41bc4e64519fd0","modified":1749018223170},{"_id":"public/tags/服务器/index.html","hash":"dbf04a3b2f6a489904adf8f84200c986e095f915","modified":1749018223170},{"_id":"public/tags/某墙/index.html","hash":"0756e04c0c8fb6a404900ba83b46f120a25612dd","modified":1749018223170},{"_id":"public/tags/玄犬/index.html","hash":"5dd762c518240ea5b02222b822d74e0b601ce874","modified":1749018223170},{"_id":"public/tags/悬楼/index.html","hash":"3ccb70c80d347eaa9fe4afe5a7ae8a2082b49ec7","modified":1749018223170},{"_id":"public/tags/Babel/index.html","hash":"cc37939d5f0ac5f28db84e5a0947fb810a6f95e0","modified":1749018223170},{"_id":"public/tags/Blog/index.html","hash":"84c271213549622f4f723c00f1ef583ff8ba5521","modified":1749018223170},{"_id":"public/tags/Canvas/index.html","hash":"14b856b92d929b3c3808d900b96bab547abb8b55","modified":1749018223170},{"_id":"public/tags/GeoJSON/index.html","hash":"f2484f46f5eb2ac9292e29fe01fa8d0a29b6f46a","modified":1749018223170},{"_id":"public/tags/反代节点/index.html","hash":"431eaabe87fe362a3e7aeed8d989cd0c827d2e4e","modified":1749018223170},{"_id":"public/tags/Google/index.html","hash":"d277c544a5cc8173e027717a727a5e6558772a8d","modified":1749018223170},{"_id":"public/tags/Mac/index.html","hash":"48fb087cfed17bdbb8e9e24562b73f8de9605d84","modified":1749018223170},{"_id":"public/tags/VS-Code/index.html","hash":"a02119589311a5ee08c906b065c5c5b5d88c8df2","modified":1749018223170},{"_id":"public/tags/Git/index.html","hash":"6a38f3d202a2c960693ee9efd2679e36b4ea72ea","modified":1749018223170},{"_id":"public/tags/commitizen/index.html","hash":"cd977e81e871c39e8a2fc44652df6d435b671e6a","modified":1749018223170},{"_id":"public/tags/cz/index.html","hash":"92812404500cd81d69d222b753a6b170a6ca8a42","modified":1749018223170},{"_id":"public/tags/Docker/index.html","hash":"17fd6ba281e834e15f5dc76c4bcf7b803717c893","modified":1749018223170},{"_id":"public/tags/Rebase/index.html","hash":"177dc2c083c7aca99a7c14e1db3c9371939819f8","modified":1749018223170},{"_id":"public/tags/Webhook/index.html","hash":"237dbdb98c2bcd7d19e0d22bb45e6c3c8ea1a899","modified":1749018223170},{"_id":"public/tags/git/index.html","hash":"ce107cebc9eddb0a0c088e5a753e49d67709e3ee","modified":1749018223170},{"_id":"public/tags/Go/index.html","hash":"0b2487c4d0697bad28436379ca7000ce58eae1c1","modified":1749018223170},{"_id":"public/tags/Hash/index.html","hash":"716c6ea3f4d5756cd9b43d24dc1f2d449554241e","modified":1749018223170},{"_id":"public/tags/Homebrew/index.html","hash":"d2b255aa5ba10d158777de69cbf7adae8822ecca","modified":1749018223170},{"_id":"public/tags/Lerna/index.html","hash":"75baa6f7d88435c5d14320941ca2324a8374c093","modified":1749018223170},{"_id":"public/tags/Linux/index.html","hash":"351ec7341721e59dbaaa2d69300424414bbe6c01","modified":1749018223170},{"_id":"public/tags/Node/index.html","hash":"318823d8bc7c6f5e2170cb183223f4979a5b061b","modified":1749018223170},{"_id":"public/tags/二进制/index.html","hash":"c3ca52ed2ffb5b7e1a0e404dd45195736b38a1bb","modified":1749018223170},{"_id":"public/tags/n/index.html","hash":"67f54ba30990a165d6b91b94e5d600d4948805ba","modified":1749018223170},{"_id":"public/tags/Nginx/index.html","hash":"029a237cf585f737764eff91697b95c020f9ae43","modified":1749018223170},{"_id":"public/tags/Ubuntu/index.html","hash":"7a8be2b3de27afd69c70e1da8d27305bda533c47","modified":1749018223170},{"_id":"public/tags/Oauth2-0/index.html","hash":"c61fde7540ab4744c477092d39a8b6b05e884c96","modified":1749018223170},{"_id":"public/tags/pm2/index.html","hash":"cba9436f7c62dfd88e9b7605e562400023496f6b","modified":1749018223170},{"_id":"public/tags/RegExp/index.html","hash":"268fe65c63e6402374d48e30de8ee080172c5b9a","modified":1749020917467},{"_id":"public/tags/Serverless/index.html","hash":"9c9d148dabc428b74ae4e038a2f0fa8bd85439ff","modified":1749018223170},{"_id":"public/tags/CSS/index.html","hash":"8458739b5781436891f5172d059878218b2fd23d","modified":1749018223170},{"_id":"public/tags/WebGL/index.html","hash":"805ebecbf2477dd45cdb65ba02950cb1d5951f82","modified":1749018223170},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1749020596198},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1749020596198},{"_id":"public/img/favicon.ico","hash":"15a58c7b3bd913859362bc4627fc342d2e2dccfd","modified":1749020596198},{"_id":"public/img/avatar-regex.png","hash":"3a6daf9a6133b55707303186166bfa0f61371238","modified":1749020596198},{"_id":"public/img/avatar.png","hash":"a86cda98d5bc02e86f94c2ac48bfa0769be9019d","modified":1749020596198},{"_id":"public/img/blog.png","hash":"574a3c21f824f3592ec596af128c2c381b26eb44","modified":1749004229587},{"_id":"public/img/canvas-circle.png","hash":"a8e588b86ca4f719914ccce939e92ee824d66c4b","modified":1749004229587},{"_id":"public/img/canvas-china-demo.png","hash":"90a109dee9dca864cdd9b3d354d2d011152a1012","modified":1749004229587},{"_id":"public/img/canvas-grid.png","hash":"c1dd970806c3eff3e55aceaddbd6f9af4e4a655f","modified":1749004229587},{"_id":"public/img/canvas-line.png","hash":"12fb79ef5533a3cc5d71badbc09adf938986aa0e","modified":1749004229587},{"_id":"public/img/canvas-point.png","hash":"802302e483c5ea1b5253a3ac8900481ce4e82ce7","modified":1749004229587},{"_id":"public/img/canvas-rectangle.png","hash":"45989b0b2f0467ec604bae85f35d352add57b0fa","modified":1749004229587},{"_id":"public/img/canvas-text.png","hash":"09fb729d09129b6eacdb4fd203d2d1dc1a7c7ca8","modified":1749004229587},{"_id":"public/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1749020596198},{"_id":"public/img/canvas-triangle.png","hash":"cc6e36a6d2d2b90c3fcfe6830bb8128cfc2c51db","modified":1749004229587},{"_id":"public/img/canvas.png","hash":"8a085cdd2f57c2d0a60139c287b7790697cef604","modified":1749004229587},{"_id":"public/img/celery_512.png","hash":"b833973e834aa1ae4539a17daf1fdc63f64bb0f1","modified":1749004229587},{"_id":"public/img/cf-wkrs-node-9.png","hash":"f20c32166b0b51afc2e8003eb59128c0d32ca650","modified":1749004229587},{"_id":"public/img/cf-wkrs-node.png","hash":"4668fdacb1220af8dfb9d05e17bb556e9e9a3147","modified":1749004229587},{"_id":"public/img/code.png","hash":"f3cb5d8f34b6bca192235ba457361148271ba670","modified":1749004229587},{"_id":"public/img/commitizen-0.png","hash":"4d045a416afb4765742b18e65c19fea4a89249d6","modified":1749004229587},{"_id":"public/img/commitizen-avatar.png","hash":"8c5fd84624a8c8b87ad295dd332d4004d628028d","modified":1749004229587},{"_id":"public/img/cover-blog.png","hash":"9d4b7fec6ef089322d561d428a69cbfa2d89e0c3","modified":1749004229587},{"_id":"public/img/cover-ast.png","hash":"802964a966ec3312b2d5c3a876f73a21a985732e","modified":1749004229587},{"_id":"public/img/cover-github-webhooks.png","hash":"2bcebbf0a984ab98f93f82435b11f7377462e417","modified":1749004229587},{"_id":"public/img/cover-docker.png","hash":"3f4ea8b4bf3b1c5f65a0ed96ca62b936d1d95dcc","modified":1749004229587},{"_id":"public/img/cover-n.png","hash":"d6146e97c5eb4691b3b6d23da76afa68f040b207","modified":1749004229587},{"_id":"public/img/geojson.png","hash":"3a0c8d17457b1509a185d9ad737676031d405482","modified":1749004229587},{"_id":"public/img/git-mac.png","hash":"072214a1469f2df79870489e63aa44f23adbd8b3","modified":1749004229587},{"_id":"public/img/git-merge.gif","hash":"04f48ed0b79dd753d21f9983b07c5ed119afa9c3","modified":1749004229587},{"_id":"public/img/git-rebase-cover.png","hash":"c2948efd9f8c6b27b695003961ba2750e036e0a1","modified":1749004229587},{"_id":"public/img/github-action.png","hash":"cfa29dd23d8d8c84c46fbbd701e68dd3c85a4034","modified":1749004229587},{"_id":"public/img/github-secret-ssh.png","hash":"21de870476134f2ca3ee1bad5a1919c9b9edc415","modified":1749004229587},{"_id":"public/img/github-workflow.png","hash":"29a4012d49bfad285d6bbcea1c89e7793c3151c9","modified":1749004229587},{"_id":"public/img/hash-1.png","hash":"5cf2cd0d68d42763dfdb68a58b6b1d3be9fb9c33","modified":1749004229587},{"_id":"public/img/github.png","hash":"778a3ed8febda0d4ed1620675a5b912a612a787a","modified":1749004229587},{"_id":"public/img/hash-3.png","hash":"697b32246b24cd48ea5be2a89e3948e1fc23d4e9","modified":1749004229587},{"_id":"public/img/hash-6.png","hash":"f2eef993bcebee0370141c86b38d3542230daddc","modified":1749004229587},{"_id":"public/img/golang.png","hash":"ee7d6741222567743cb0d958a11cc2d355a2caec","modified":1749004229587},{"_id":"public/img/hash-2.png","hash":"2b4698c259f9a68039ec0de0339ac08f2cc7c9a9","modified":1749004229587},{"_id":"public/img/hash-4.png","hash":"dd8ccaff184144d9e81d8fa446bf076148dd218d","modified":1749004229587},{"_id":"public/img/hash-5.png","hash":"0a6b8b60b54aa891ca2434d04c14bd2349523833","modified":1749004229587},{"_id":"public/img/hash-7.png","hash":"d364b484bba82e36e0d5556d16a16639eeac3b4d","modified":1749004229587},{"_id":"public/img/hash-8.png","hash":"e27d7cd819b7fc05d20dee7fae50410df5606aa7","modified":1749004229587},{"_id":"public/img/hash.png","hash":"2991cabfac800157879368cbd92762c3e448fcaf","modified":1749004229587},{"_id":"public/img/hexo-server.png","hash":"c4805a1e1de2794845239e22523a03b1d9c64f61","modified":1749004229587},{"_id":"public/img/homebrew.png","hash":"1b59832e5a5cb3c343b1114d1be8456043ca716e","modified":1749004229587},{"_id":"public/img/linux-node-1.jpg","hash":"1b22bc4f3fbcaa2281b0f822bc63cafc5763bf09","modified":1749004229587},{"_id":"public/img/lerna-publish.png","hash":"c66cd936056719bee8a7710b15ec585c1311cc22","modified":1749004229587},{"_id":"public/img/my-divination.png","hash":"588128bd63df5ee3dc91af460941a552a682a4e7","modified":1749004229587},{"_id":"public/img/mcp_scenarios.png","hash":"1a64f2275508e50b0a935e0c29a32c07bed24414","modified":1749004229587},{"_id":"public/img/napkin-logo.svg","hash":"f1a25dc8d2240b8c3c9c1c2887d19bf0af0e00d8","modified":1749004229587},{"_id":"public/img/n.png","hash":"e4154238269937fa4cbea612ca09cbe9ba5f1652","modified":1749004229587},{"_id":"public/img/ngrok.png","hash":"b138c06df5dd1812c7cfa8617376b545c5dfad96","modified":1749004229587},{"_id":"public/img/node-git-version.png","hash":"5f9d26f78582a7cfd095a55800625cbf33b6085c","modified":1749004229587},{"_id":"public/img/npm-add-username.png","hash":"57e4552bd023598207eefedda04b0addf813a518","modified":1749004229587},{"_id":"public/img/oauth-app.png","hash":"982ba11648295f1620e06a4e81e78a633061d129","modified":1749004229587},{"_id":"public/img/oauth-cover.png","hash":"b1c80be1b114568f1b16911927c1b11c440f114b","modified":1749004229587},{"_id":"public/img/pm2.jpg","hash":"ad065fe88af074a5c52bc1d9d216fa9dbfbaac22","modified":1749004229587},{"_id":"public/img/shell-code-success.png","hash":"68e1a9cfcfba39bacfc302968fafdeba5914dd95","modified":1749004229587},{"_id":"public/img/shell-code.png","hash":"0314e718c4177d9bd8a8a61f8c86e0fb6fe2256c","modified":1749004229587},{"_id":"public/img/singularity.run.pyhton.1.png","hash":"e6e75282e8284906e25d9b774fbf5ac7c4f8cbf2","modified":1749004229587},{"_id":"public/img/switch-1.png","hash":"e82b5273ae736fdee6f82fc4463e01befb9df7e3","modified":1749004229587},{"_id":"public/img/switch-3.png","hash":"e05431cd539c785ea4c803d61b1a16988f83b243","modified":1749004229587},{"_id":"public/img/switch-guaishou.png","hash":"78350740a784d73285dcd3238d0d5d5e7838fbc8","modified":1749004229587},{"_id":"public/img/switch-feiji.png","hash":"3659f6231fa3afdb095636a8748b68f574ecec8f","modified":1749004229587},{"_id":"public/img/top-artical.png","hash":"1ceeec2791786c37623d01f2c0dca77ed077177a","modified":1749004229587},{"_id":"public/img/top-category.png","hash":"bff609dbaa3a4e4d36987dcdda37c101b8ef9e53","modified":1749004229587},{"_id":"public/img/ssh-key.jpg","hash":"269f8bef939b542ed0f5d72f60b54658ee23f01d","modified":1749004229587},{"_id":"public/img/linux.jpg","hash":"87375ca580ff89d295d15d32655af9dd7348eb5e","modified":1749004229587},{"_id":"public/img/ubuntu2004.png","hash":"55648f9a5d19304a5a09e7dbad2f55307ffdbded","modified":1749004229587},{"_id":"public/img/top-tags.png","hash":"38a6e82f8e5c2f590ddf66af10ee7464f93f94cb","modified":1749020917467},{"_id":"public/img/ubuntu-nginx.png","hash":"2297b506b967c7b4800c5327551563b92ad1d3f8","modified":1749004229587},{"_id":"public/img/webgl.jpg","hash":"cbbb65732beb27b5cac2fdb600916b684184c854","modified":1749004229587},{"_id":"public/img/软件架构设计与生命周期.svg","hash":"3b964c0bc4599e21486979d8f02eece6a15ca963","modified":1749004229587},{"_id":"public/assets/css/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1749020596198},{"_id":"public/assets/js/Meting.min.js","hash":"a0585220b918d78649a7893279e1ec4fb5abe835","modified":1749020596198},{"_id":"public/assets/js/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1749020596198},{"_id":"public/img/canvas-china.png","hash":"4bd6344a3e80ccb435b62e7e78b3294dce115623","modified":1749004229587},{"_id":"public/img/cf-wkrs-node-11.png","hash":"5129635964ac713108abb8c8a7b8ffbc0db15ca1","modified":1749004229587},{"_id":"public/img/cf-wkrs-node-2.png","hash":"e113c46b437b83957fc9a7048e6a15952388375d","modified":1749004229587},{"_id":"public/img/cf-wkrs-node-8.png","hash":"7860ca7be02358f587a522fe67afe49ccc5a241b","modified":1749004229587},{"_id":"public/img/commitizen-1.png","hash":"705765c14de3e64c728e58251e8b150772fe4e2b","modified":1749004229587},{"_id":"public/img/cf-wkrs-node-1.png","hash":"4c779b350b06900326029ff6a48be789655fbdf8","modified":1749004229587},{"_id":"public/img/commitizen-2.png","hash":"b167bf4baedc92344f025b23d025fee9ffb1d2f1","modified":1749004229587},{"_id":"public/img/cover-lerna.png","hash":"d903950d83af8fcb4a35bd48363f03168d88a2be","modified":1749004229587},{"_id":"public/img/deepseek-vs-OpenAI.png","hash":"a5fd23445bd855a843ad5cbdcd798483231dcd07","modified":1749004229587},{"_id":"public/img/deepseek.docker.png","hash":"2a9f1e666cd4763113e0de6ddcbdbda5d9a1998d","modified":1749004229587},{"_id":"public/img/deepseek.settings.png","hash":"d125267aaec5a11f2dc6809fb4d661498cd886f8","modified":1749004229587},{"_id":"public/img/dk-github-webhooks.png","hash":"d22647def2c8582e63450d674501dd1d888fa5ea","modified":1749004229587},{"_id":"public/img/deploy-dns.png","hash":"be09fc8c8115ef7eb98979e8a6330ca0839c423c","modified":1749004229587},{"_id":"public/img/dns-record.png","hash":"1b3638a1280bb367182dd49251cd2d9b088207f5","modified":1749004229587},{"_id":"public/img/dns.png","hash":"98044e06b8838313ccdaa21dc4456409de2a196e","modified":1749004229587},{"_id":"public/img/git-avatar.png","hash":"737f26aac596a179b5b83f23628a405c3b826934","modified":1749004229587},{"_id":"public/img/github-webhooks-trigger.png","hash":"71bcbc7a8e7fc9782bd7d0936551a7ac76080cc9","modified":1749004229587},{"_id":"public/img/github-webhooks-add.png","hash":"87c67c1a00e891f93deb36a7c48770160f31d189","modified":1749004229587},{"_id":"public/img/hash-9.png","hash":"af5da7b68976e682543e76f454a145a306b63cee","modified":1749004229587},{"_id":"public/img/hexo-deploy.png","hash":"20592b6d304737f14957d3415d6d297f683df056","modified":1749004229587},{"_id":"public/img/lerna-create.png","hash":"c7431b66ce97205607edfe6834e16b1afae25fdc","modified":1749004229587},{"_id":"public/img/loading.gif","hash":"f3ed6ebb365ad368e2e60baa4c497960b7ffec24","modified":1749004229587},{"_id":"public/img/macbook-01.png","hash":"41f4c9c009f9358536c59c262a0602a643e212d1","modified":1749004229587},{"_id":"public/img/my-squoosh.png","hash":"66b85b8654148b68272429a11e1e060cb4861821","modified":1749004229587},{"_id":"public/img/npm-add-organization.png","hash":"d826b0fc072af49dfae28e54bc6a5d15f9361382","modified":1749004229587},{"_id":"public/img/npm-home.png","hash":"a020640f1569d34b6b6d676b16ccf802bc7fb567","modified":1749004229587},{"_id":"public/img/oauth-github-app.png","hash":"c597ba929300e2a55b6834e982f150393b4e31f7","modified":1749004229587},{"_id":"public/img/pageAssist.png","hash":"4469250f5959f286765e1367f49de55a6702d75e","modified":1749004229587},{"_id":"public/img/racknerd.png","hash":"1cb07f27fc57dd8ef5d90445ab0b56f57204b105","modified":1749004229587},{"_id":"public/img/ssl.png","hash":"5de5b146c5e0ec3de0417e8b8c30011ee5ccb7f2","modified":1749004229587},{"_id":"public/img/singularity.run.2.png","hash":"64bc37a542fef70416417fcfc4e53cf21a462f61","modified":1749004229587},{"_id":"public/img/static_file.png","hash":"d4f7c075336ded3a4b5676fc0839314b8e18a283","modified":1749004229587},{"_id":"public/img/switch-4.png","hash":"35db93064abfdeb69546e6e22444e4de3d363cf7","modified":1749004229587},{"_id":"public/img/oauth-1.png","hash":"450f8e0767fb5bbdea4584a6c45296c5c2373551","modified":1749004229587},{"_id":"public/img/top-index.png","hash":"7cc03973d14d670bb2d7dd00ca4f54b61b7ea793","modified":1749004229587},{"_id":"public/img/top-tag.png","hash":"ff0f439da47944e54a1a91601658ec439bc97c14","modified":1749004229587},{"_id":"public/css/index.css","hash":"c4561838d1dc05dc6f3b52f6ab39a630d27f6a77","modified":1749020596198},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1749020596198},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1749020596198},{"_id":"public/js/search/algolia.js","hash":"65b45e61586f7e66c3f338370bfd9daadd71a4b7","modified":1749020596198},{"_id":"public/js/main.js","hash":"31467612b20a2009175cd7c423d94718d5c89d41","modified":1749020596198},{"_id":"public/js/utils.js","hash":"41481019ef510c74e744f4f7ec4d0a13b5ccc04c","modified":1749020596198},{"_id":"public/js/search/local-search.js","hash":"459e2541afda483916d16fce4aaa56b41bcd42ba","modified":1749020596198},{"_id":"public/img/LangChain框架.png","hash":"e6e08d5bc3f37f82f7603b3a8c1280f146e20c11","modified":1749004229587},{"_id":"public/img/cf-wkrs-node-3.png","hash":"7b1e09abdcb91c144aed9d2bbcf3400992119378","modified":1749004229587},{"_id":"public/img/cf-wkrs-node-5.png","hash":"ff20bd5966b05fbdccd7d05cf5cdd73bfeb217b8","modified":1749004229587},{"_id":"public/img/cf-wkrs-node-4.png","hash":"105ef53b4de6a07043ea1b23196c5bef9d738992","modified":1749004229587},{"_id":"public/img/cf-wkrs-node-6.png","hash":"203c7810965ed318b27a809239bea320c2f63fc8","modified":1749004229587},{"_id":"public/img/deploy-cover.png","hash":"05db2eff87a7aaaab8b29ddac37e6d3fe02ca47a","modified":1749004229587},{"_id":"public/img/deploy-domain.png","hash":"bc2db7a732ba531f8a9c769817f1e83e20a8dadc","modified":1749004229587},{"_id":"public/img/deploy.png","hash":"a5052c3134b121e3ab7db14b4170113ff0638625","modified":1749004229587},{"_id":"public/img/git-rebase.gif","hash":"eb9ddfc624ec1edcdab30c6d6cdfbe8f06ca0a43","modified":1749004229587},{"_id":"public/img/mcp_with_chat.png","hash":"fffa3a414e0013a052e849219f8e9467341eeb95","modified":1749004229587},{"_id":"public/img/ollama.anythingllm.png","hash":"31c803c7c3a2caeb49bf40dd5a56ed776b0757a7","modified":1749004229587},{"_id":"public/img/canvas-animation.gif","hash":"c86745e5b51cda7de315aaa455c97541faf1a8eb","modified":1749004229587},{"_id":"public/img/cf-wkrs-node-10.png","hash":"6c971184c9293eb5187eacbf830f396ae80cb6a0","modified":1749004229587},{"_id":"public/img/cf-wkrs-node-7.png","hash":"e428461ec809f6e3116ddcf80fa1afc68a8f6f29","modified":1749004229587},{"_id":"public/img/frp.icon.png","hash":"7bd743e09f4af5f20a1b017950951047593185e7","modified":1749004229587},{"_id":"public/img/singularity.icon.png","hash":"62c8cbd0b837198896fa3a490d378029c68f8ead","modified":1749004229587},{"_id":"public/img/switch.gif","hash":"fedbfb2558947f02ec022d184974e33b45282233","modified":1749004229587},{"_id":"public/font/Pacifico-Regular.ttf","hash":"baca1fca7fe74b61cb33aa0da48ec1a3a77bcf49","modified":1749020596198},{"_id":"public/img/my-blog.png","hash":"a5b67b4edee0ec98215a411557fbf1833df65728","modified":1749004229587},{"_id":"public/img/my-twitter.png","hash":"e6861a635614368336ef738f14ad4eab95378be1","modified":1749004229587},{"_id":"public/img/top-default.png","hash":"a9f7909ca86049dd002e524ee95f4decd741f5fe","modified":1749004229587},{"_id":"public/img/linux-node-2.jpg","hash":"fb8e80856b3fb2329e73aa0370cf93d591ab0a6a","modified":1749004229587},{"_id":"public/img/yijing.png","hash":"f06ca6084ea5bd776856d275e0e10149ee5bed34","modified":1749004229587},{"_id":"public/img/ri_20250306_mlj001.png","hash":"42fc94b4a74f0f61675abacb0a83c64bbf4bc7b5","modified":1749004229587},{"_id":"public/img/my-github.png","hash":"6126057b7750c7f5af93c0425f6df6fc274159bb","modified":1749004229587},{"_id":"public/img/mcp.png","hash":"d70254bbae850902626f241c916f4ff05555ad45","modified":1749004229587},{"_id":"public/img/LangChain-from-zero.png","hash":"ec8a64a8f5beea7e44a5fa21c03dbc2bd5bbfad7","modified":1749004229587},{"_id":"public/img/jj2.png","hash":"71311915c822f366a5787ecae9a93509b683a7b6","modified":1749004229587},{"_id":"public/img/jj.png","hash":"eb6941c85c5d9063f38213c017cbcee0c32c3502","modified":1749004229587},{"_id":"public/img/switch-2.gif","hash":"dff7c92f00c260e620a8618782d91df8eb66c704","modified":1749004229587},{"_id":"public/img/switch-5.gif","hash":"c8dede0016b9f20ab8f0fda1474f19f655190d18","modified":1749004229587},{"_id":"public/img/commitizen-3.gif","hash":"c15f8a930c8f4cca6613be5f216cbea6ebc11de0","modified":1749004229587},{"_id":"public/img/switch-6.gif","hash":"40f1b24a568bbd68440a6874be2e6c0a31d46c32","modified":1749004229587}],"Category":[{"name":"科学上网","_id":"cmbhbylum0004gkc2bxdzc9e0"},{"name":"云原生","_id":"cmbhbyluo000cgkc243x2375i"},{"name":"数据结构与算法","_id":"cmbhbylup000hgkc2cd9u6vhc"},{"name":"软考基础","_id":"cmbhbyluq000mgkc28sgv0103"},{"name":"Python","_id":"cmbhbylur000rgkc272ltg3fj"},{"name":"辅助工具类","_id":"cmbhbyluu001cgkc2bl3qc25i"},{"name":"日记","_id":"cmbhbyluv001jgkc222uz3gqh"},{"name":"AI工具","_id":"cmbhbyluv001qgkc2fklo28z2"},{"name":"Golang","_id":"cmbhbyluw001wgkc25hjafumm"},{"name":"微服务","_id":"cmbhbylux0029gkc29algf9kr"},{"name":"设计模式","_id":"cmbhbyluy002ggkc29h959sye"},{"name":"数据库","_id":"cmbhbylv3003ogkc240y43grf"},{"name":"异梦录","parent":"cmbhbyluv001jgkc222uz3gqh","_id":"cmbhbylv4003wgkc20l236o90"},{"name":"Redis","_id":"cmbhbylv50046gkc2cvfkaxl3"},{"name":"AI-Tools","parent":"cmbhbyluv001qgkc2fklo28z2","_id":"cmbhbylv6004rgkc2gyn7dsjv"},{"name":"学习笔记","_id":"cmbhbylv7004zgkc2hsnn3u1a"},{"name":"博客","_id":"cmbhbylv80054gkc2cbg22pvo"},{"name":"技术研究","_id":"cmbhbylv9005cgkc2fs7vg73y"},{"name":"实用教程","_id":"cmbhbylva005pgkc21xte6kzx"},{"name":"消息队列","_id":"cmbhbylvc0069gkc2893x440p"},{"name":"DeepSeek","_id":"cmbhbylvc006igkc28mqe5his"},{"name":"FRP","_id":"cmbhbylvd006ygkc2e6n1fxpl"},{"name":"Linux","_id":"cmbhbylve007egkc22ifk7s4u"},{"name":"HPC","_id":"cmbhbylvg009agkc2cqv66cmc"},{"name":"LLM","_id":"cmbhbylvg009egkc2e1m01zc6"},{"name":"LangChain","_id":"cmbhbylvh009ggkc29pzdcrwn"},{"name":"GO语言并发之道","_id":"cmbhbylvh009hgkc2bma77qhy"},{"name":"静态文件服务","_id":"cmbhbylvh009igkc20s5v4mri"},{"name":"Python","parent":"cmbhbylvc0069gkc2893x440p","_id":"cmbhbylvh009kgkc21h1vfwa0"},{"name":"AI","parent":"cmbhbylvc006igkc28mqe5his","_id":"cmbhbylvh009lgkc2cfkj3vbb"},{"name":"网络","parent":"cmbhbylvd006ygkc2e6n1fxpl","_id":"cmbhbylvh009ngkc2gyn5ghnd"},{"name":"Git","parent":"cmbhbylve007egkc22ifk7s4u","_id":"cmbhbylvh009qgkc2272d28gs"},{"name":"容器","parent":"cmbhbylvg009agkc2cqv66cmc","_id":"cmbhbylvh009tgkc2fx2rayir"},{"name":"大模型","parent":"cmbhbylvg009egkc2e1m01zc6","_id":"cmbhbylvh009wgkc28m96bhqn"},{"name":"大语言模型","parent":"cmbhbylvh009ggkc29pzdcrwn","_id":"cmbhbylvh009zgkc2cen1enpk"},{"name":"Python","parent":"cmbhbylvh009igkc20s5v4mri","_id":"cmbhbylvh00a1gkc2a5zn5ne3"},{"name":"MCP","parent":"cmbhbylvh009wgkc28m96bhqn","_id":"cmbhbylvi00a2gkc23mwz1bha"},{"name":"LLM","parent":"cmbhbylvh009zgkc2cen1enpk","_id":"cmbhbylvi00a3gkc2726e4002"},{"name":"Go","parent":"cmbhbylvh00a1gkc2a5zn5ne3","_id":"cmbhbylvi00a4gkc2dtbw6duj"},{"name":"AI","parent":"cmbhbylvi00a2gkc23mwz1bha","_id":"cmbhbylvi00a6gkc2edl9hmse"},{"name":"经济","_id":"cmbhbylvj00aigkc26xtu2f27"}],"Data":[],"Page":[{"title":"About Me","date":"2019-04-16T12:32:54.000Z","type":"about","layout":"about","keywords":["博客","个人博客","Ziang Liu","blog","Ziang Liu's Blog","Alex","我的"],"_content":"","source":"about/index.md","raw":"---\ntitle: About Me\ndate: 2019-04-16 20:32:54\ntype: \"about\"\nlayout: \"about\"\nkeywords:\n  - 博客\n  - 个人博客\n  - Ziang Liu\n  - blog\n  - Ziang Liu's Blog\n  - Alex\n  - 我的\n---\n","updated":"2025-06-04T03:25:40.499Z","path":"about/index.html","_id":"cmbhbyluj0000gkc24urc1kjr","comments":1,"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/friends.jpg","excerpt":"","more":""},{"title":"Categories","date":"2019-04-16T10:56:58.000Z","type":"categories","layout":"categories","top_img":"/img/top-category.png","keywords":["博客","个人博客","Ziang Alex","blog","Ziang Alex's Blog","Alex"],"_content":"","source":"categories/index.md","raw":"---\ntitle: Categories\ndate: 2019-04-16 18:56:58\ntype: \"categories\"\nlayout: \"categories\"\ntop_img: /img/top-category.png\nkeywords:\n  - 博客\n  - 个人博客\n  - Ziang Alex\n  - blog\n  - Ziang Alex's Blog\n  - Alex\n---\n","updated":"2025-06-04T03:26:38.078Z","path":"categories/index.html","_id":"cmbhbylul0002gkc2e6pt76xk","comments":1,"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/friends.jpg","excerpt":"","more":""},{"title":"Tags","date":"2021-04-25T10:59:22.000Z","type":"tags","layout":"tags","top_img":"/img/top-tags.png","keywords":["博客","个人博客","Alex","blog","Alex's Blog"],"_content":"","source":"tags/index.md","raw":"---\ntitle: Tags\ndate: 2021-04-25 18:59:22\ntype: tags\nlayout: tags\ntop_img: /img/top-tags.png\nkeywords:\n  - 博客\n  - 个人博客\n  - Alex\n  - blog\n  - Alex's Blog\n---\n","updated":"2025-06-04T03:34:45.589Z","path":"tags/index.html","_id":"cmbhbylun0006gkc2ar9ldcfx","comments":1,"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/friends.jpg","excerpt":"","more":""},{"title":"Music","date":"2021-08-10T16:00:00.000Z","keywords":["博客","个人博客","Ziang Liu","blog","Ziang Liu's Blog","Alex"],"_content":"\n<style >\n\n  #aplayer-author{\n    border-bottom: 1px solid #eee;\n    padding-bottom: 16px;\n  }\n  #aplayer-author>.aplayer-btn {\n    display: inline-block;\n    cursor: pointer;\n    color: #777;\n  }\n  #aplayer-author>.aplayer-btn:hover {\n    color: #333\n  }\n  #aplayer-author>.aplayer-btn-active {\n    color: #0077cc\n  }\n    #aplayer-author>.aplayer-btn-active:hover{\n    color: #0077cc\n  }\n\n\n</style>\n<div style=\"display: flex\">\n  <div style=\"width: 100px; min-width: 100px\">所有歌手</div>\n  <div id=\"aplayer-author\"></div>\n</div>\n<img id=\"aplayer-loading\" style=\"heigit: 160px; width: 160px; opacity: 0\" src=\"/img/loading.gif\"></img>\n<div id=\"aplayer\"></div>\n\n<script>\nconst getJSON = function(url) {\n    const promise = new Promise(function(resolve, reject){\n        const handler = function() {\n            if (this.readyState !== 4) {\n                return;\n            }\n            if (this.status === 200) {\n                resolve(this.response);\n            } else {\n                reject(new Error(this.statusText));\n            }\n        };\n        const client = new XMLHttpRequest();\n        client.open(\"GET\", url);\n        client.onreadystatechange = handler;\n        client.responseType = \"json\";\n        client.setRequestHeader(\"Accept\", \"application/json\");\n        client.send();\n\n    });\n    return promise;\n};\n\n  const dom = document.getElementById('aplayer-loading');\n  setTimeout(() => {\n     if(dom) { dom.style.opacity = 100; }\n  }, 300)\n\ngetJSON(\"https://cdn.emooa.com/output.json\").then(function(json = {}) {\n\n  // 随机排序\n  const shuffle = (arr) => {\n    let i = arr.length;\n    while(i) {\n      let j = Math.floor(Math.random() * i--);\n      [arr[j], arr[i]] = [arr[i], arr[j]]\n    } return arr;\n  }\n\n  let audio = shuffle(json.music).map(music => ({...music, \n    url: `https://cdn.emooa.com/${music.url}`,\n    pic: `https://cdn.emooa.com/${music.pic}`,\n    lrc: `https://cdn.emooa.com/${music.lrc}`\n  }));\n  \n  console.log(1, audio)\n \n\n  // 移除loading\n  const loadingDom = document.getElementById('aplayer-loading');\n  loadingDom.style.display=\"none\"\n\n/** 加载aplayer */\n  const showAplayer = (audio, authorName)=> {\n    audio = audio.filter(item => {\n      if (authorName) {\n        if (authorName === '全部') return true;\n        return item.author === authorName;\n      }\n      return true\n    })\n\n    new APlayer({\n      container: document.getElementById('aplayer'),\n      mini: false,\n      autoplay: false,\n      // theme: '#FADFA3',\n      loop: 'all',\n      order: 'list',\n      preload: 'auto',\n      volume: 0.7,\n      mutex: true,\n      listFolded: false,\n      listMaxHeight: '400px',\n      lrcType: 3,\n      audio: audio,\n    });\n  }\n\n  /** 加载歌手 */\n  const authorDom = document.getElementById('aplayer-author');\n  let author = audio.map(item => item.author);\n\n  var authorTimes = {};\n  for (var i = 0; i < author.length; i++) {\n    var key = author[i];\n    if (authorTimes[key]) {\n      authorTimes[key]++;\n    } else {\n      authorTimes[key] = 1;\n    }\n  }\n\n\n  author = Object.entries(authorTimes).sort((a,b) => b[1]-a[1])\n  author = [['全部', audio.length],...author];\n  author.forEach((item, index) => {\n    const div = document.createElement('div');\n    div.classList.add('aplayer-btn');\n    if(index === 0)  div.classList.add(`aplayer-btn-active`);\n    div.style.marginRight = '16px';\n    // 添加创建好的文本节点\n    div.appendChild(document.createTextNode(`${item[0]}${item[1]=== 1 ?'': `(${item[1]})`}`));\n    authorDom.appendChild(div);\n  });\n  const authorBtn = document.getElementsByClassName(\"aplayer-btn\");\n  const authorBtnActive = document.getElementsByClassName(\"aplayer-btn-active\");\n\n  let authorName;\n  for (let i in authorBtn) {\n    authorBtn[i].onclick = () => {\n      authorName=author[i][0];\n      showAplayer(audio, authorName);\n      if (authorBtnActive[0]) authorBtnActive[0].classList.remove('aplayer-btn-active')\n      authorBtn[i].classList.add('aplayer-btn-active');\n    }\n  }\n  showAplayer(audio);\n})\n\n</script>\n<!--\n{% aplayerlist %}{\"autoplay\": false,\"showlrc\": 3,\"mode\": \"list\", \"listMaxHeight\": \"400px\",\"music\": [\n  {\n    \"theme\": \"#ebd0c2\",\n    \"title\": \"云烟成雨\",\n    \"author\": \"房东的猫\",\n    \"url\": \"https://api.i-meto.com/meting/api?server=tencent&type=url&id=001yYM0I30CzdP&auth=243686f98a14224f0d462fb75e9a3dfe3f3d2b12\",\n    \"pic\": \"https://api.i-meto.com/meting/api?server=tencent&type=pic&id=004NFJ230yX0Nz&auth=f68522433cb19f7cf34ce99cb9cf7c2ba76ce5a9\",\n    \"lrc\": \"https://api.i-meto.com/meting/api?server=tencent&type=lrc&id=001yYM0I30CzdP&auth=0b75a8e1f5dbfaddd65cef905563e0b80a162cb2\"\n  }\n]}{% endaplayerlist %} -->\n","source":"music/index.md","raw":"---\ntitle: Music\ndate: 2021-08-11\n# type: music\n# layout: music\n# top_img: /img/top-tag.jpg\nkeywords:\n  - 博客\n  - 个人博客\n  - Ziang Liu\n  - blog\n  - Ziang Liu's Blog\n  - Alex\n---\n\n<style >\n\n  #aplayer-author{\n    border-bottom: 1px solid #eee;\n    padding-bottom: 16px;\n  }\n  #aplayer-author>.aplayer-btn {\n    display: inline-block;\n    cursor: pointer;\n    color: #777;\n  }\n  #aplayer-author>.aplayer-btn:hover {\n    color: #333\n  }\n  #aplayer-author>.aplayer-btn-active {\n    color: #0077cc\n  }\n    #aplayer-author>.aplayer-btn-active:hover{\n    color: #0077cc\n  }\n\n\n</style>\n<div style=\"display: flex\">\n  <div style=\"width: 100px; min-width: 100px\">所有歌手</div>\n  <div id=\"aplayer-author\"></div>\n</div>\n<img id=\"aplayer-loading\" style=\"heigit: 160px; width: 160px; opacity: 0\" src=\"/img/loading.gif\"></img>\n<div id=\"aplayer\"></div>\n\n<script>\nconst getJSON = function(url) {\n    const promise = new Promise(function(resolve, reject){\n        const handler = function() {\n            if (this.readyState !== 4) {\n                return;\n            }\n            if (this.status === 200) {\n                resolve(this.response);\n            } else {\n                reject(new Error(this.statusText));\n            }\n        };\n        const client = new XMLHttpRequest();\n        client.open(\"GET\", url);\n        client.onreadystatechange = handler;\n        client.responseType = \"json\";\n        client.setRequestHeader(\"Accept\", \"application/json\");\n        client.send();\n\n    });\n    return promise;\n};\n\n  const dom = document.getElementById('aplayer-loading');\n  setTimeout(() => {\n     if(dom) { dom.style.opacity = 100; }\n  }, 300)\n\ngetJSON(\"https://cdn.emooa.com/output.json\").then(function(json = {}) {\n\n  // 随机排序\n  const shuffle = (arr) => {\n    let i = arr.length;\n    while(i) {\n      let j = Math.floor(Math.random() * i--);\n      [arr[j], arr[i]] = [arr[i], arr[j]]\n    } return arr;\n  }\n\n  let audio = shuffle(json.music).map(music => ({...music, \n    url: `https://cdn.emooa.com/${music.url}`,\n    pic: `https://cdn.emooa.com/${music.pic}`,\n    lrc: `https://cdn.emooa.com/${music.lrc}`\n  }));\n  \n  console.log(1, audio)\n \n\n  // 移除loading\n  const loadingDom = document.getElementById('aplayer-loading');\n  loadingDom.style.display=\"none\"\n\n/** 加载aplayer */\n  const showAplayer = (audio, authorName)=> {\n    audio = audio.filter(item => {\n      if (authorName) {\n        if (authorName === '全部') return true;\n        return item.author === authorName;\n      }\n      return true\n    })\n\n    new APlayer({\n      container: document.getElementById('aplayer'),\n      mini: false,\n      autoplay: false,\n      // theme: '#FADFA3',\n      loop: 'all',\n      order: 'list',\n      preload: 'auto',\n      volume: 0.7,\n      mutex: true,\n      listFolded: false,\n      listMaxHeight: '400px',\n      lrcType: 3,\n      audio: audio,\n    });\n  }\n\n  /** 加载歌手 */\n  const authorDom = document.getElementById('aplayer-author');\n  let author = audio.map(item => item.author);\n\n  var authorTimes = {};\n  for (var i = 0; i < author.length; i++) {\n    var key = author[i];\n    if (authorTimes[key]) {\n      authorTimes[key]++;\n    } else {\n      authorTimes[key] = 1;\n    }\n  }\n\n\n  author = Object.entries(authorTimes).sort((a,b) => b[1]-a[1])\n  author = [['全部', audio.length],...author];\n  author.forEach((item, index) => {\n    const div = document.createElement('div');\n    div.classList.add('aplayer-btn');\n    if(index === 0)  div.classList.add(`aplayer-btn-active`);\n    div.style.marginRight = '16px';\n    // 添加创建好的文本节点\n    div.appendChild(document.createTextNode(`${item[0]}${item[1]=== 1 ?'': `(${item[1]})`}`));\n    authorDom.appendChild(div);\n  });\n  const authorBtn = document.getElementsByClassName(\"aplayer-btn\");\n  const authorBtnActive = document.getElementsByClassName(\"aplayer-btn-active\");\n\n  let authorName;\n  for (let i in authorBtn) {\n    authorBtn[i].onclick = () => {\n      authorName=author[i][0];\n      showAplayer(audio, authorName);\n      if (authorBtnActive[0]) authorBtnActive[0].classList.remove('aplayer-btn-active')\n      authorBtn[i].classList.add('aplayer-btn-active');\n    }\n  }\n  showAplayer(audio);\n})\n\n</script>\n<!--\n{% aplayerlist %}{\"autoplay\": false,\"showlrc\": 3,\"mode\": \"list\", \"listMaxHeight\": \"400px\",\"music\": [\n  {\n    \"theme\": \"#ebd0c2\",\n    \"title\": \"云烟成雨\",\n    \"author\": \"房东的猫\",\n    \"url\": \"https://api.i-meto.com/meting/api?server=tencent&type=url&id=001yYM0I30CzdP&auth=243686f98a14224f0d462fb75e9a3dfe3f3d2b12\",\n    \"pic\": \"https://api.i-meto.com/meting/api?server=tencent&type=pic&id=004NFJ230yX0Nz&auth=f68522433cb19f7cf34ce99cb9cf7c2ba76ce5a9\",\n    \"lrc\": \"https://api.i-meto.com/meting/api?server=tencent&type=lrc&id=001yYM0I30CzdP&auth=0b75a8e1f5dbfaddd65cef905563e0b80a162cb2\"\n  }\n]}{% endaplayerlist %} -->\n","updated":"2025-06-04T07:06:01.128Z","path":"music/index.html","_id":"cmbhbylun0008gkc2ai3w7xh8","comments":1,"layout":"page","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><style >\n\n  #aplayer-author{\n    border-bottom: 1px solid #eee;\n    padding-bottom: 16px;\n  }\n  #aplayer-author>.aplayer-btn {\n    display: inline-block;\n    cursor: pointer;\n    color: #777;\n  }\n  #aplayer-author>.aplayer-btn:hover {\n    color: #333\n  }\n  #aplayer-author>.aplayer-btn-active {\n    color: #0077cc\n  }\n    #aplayer-author>.aplayer-btn-active:hover{\n    color: #0077cc\n  }\n\n\n</style>\n<div style=\"display: flex\">\n  <div style=\"width: 100px; min-width: 100px\">所有歌手</div>\n  <div id=\"aplayer-author\"></div>\n</div>\n<img id=\"aplayer-loading\" style=\"heigit: 160px; width: 160px; opacity: 0\" src=\"/img/loading.gif\"></img>\n<div id=\"aplayer\"></div>\n\n<script>\nconst getJSON = function(url) {\n    const promise = new Promise(function(resolve, reject){\n        const handler = function() {\n            if (this.readyState !== 4) {\n                return;\n            }\n            if (this.status === 200) {\n                resolve(this.response);\n            } else {\n                reject(new Error(this.statusText));\n            }\n        };\n        const client = new XMLHttpRequest();\n        client.open(\"GET\", url);\n        client.onreadystatechange = handler;\n        client.responseType = \"json\";\n        client.setRequestHeader(\"Accept\", \"application/json\");\n        client.send();\n\n    });\n    return promise;\n};\n\n  const dom = document.getElementById('aplayer-loading');\n  setTimeout(() => {\n     if(dom) { dom.style.opacity = 100; }\n  }, 300)\n\ngetJSON(\"https://cdn.emooa.com/output.json\").then(function(json = {}) {\n\n  // 随机排序\n  const shuffle = (arr) => {\n    let i = arr.length;\n    while(i) {\n      let j = Math.floor(Math.random() * i--);\n      [arr[j], arr[i]] = [arr[i], arr[j]]\n    } return arr;\n  }\n\n  let audio = shuffle(json.music).map(music => ({...music, \n    url: `https://cdn.emooa.com/${music.url}`,\n    pic: `https://cdn.emooa.com/${music.pic}`,\n    lrc: `https://cdn.emooa.com/${music.lrc}`\n  }));\n  \n  console.log(1, audio)\n \n\n  // 移除loading\n  const loadingDom = document.getElementById('aplayer-loading');\n  loadingDom.style.display=\"none\"\n\n/** 加载aplayer */\n  const showAplayer = (audio, authorName)=> {\n    audio = audio.filter(item => {\n      if (authorName) {\n        if (authorName === '全部') return true;\n        return item.author === authorName;\n      }\n      return true\n    })\n\n    new APlayer({\n      container: document.getElementById('aplayer'),\n      mini: false,\n      autoplay: false,\n      // theme: '#FADFA3',\n      loop: 'all',\n      order: 'list',\n      preload: 'auto',\n      volume: 0.7,\n      mutex: true,\n      listFolded: false,\n      listMaxHeight: '400px',\n      lrcType: 3,\n      audio: audio,\n    });\n  }\n\n  /** 加载歌手 */\n  const authorDom = document.getElementById('aplayer-author');\n  let author = audio.map(item => item.author);\n\n  var authorTimes = {};\n  for (var i = 0; i < author.length; i++) {\n    var key = author[i];\n    if (authorTimes[key]) {\n      authorTimes[key]++;\n    } else {\n      authorTimes[key] = 1;\n    }\n  }\n\n\n  author = Object.entries(authorTimes).sort((a,b) => b[1]-a[1])\n  author = [['全部', audio.length],...author];\n  author.forEach((item, index) => {\n    const div = document.createElement('div');\n    div.classList.add('aplayer-btn');\n    if(index === 0)  div.classList.add(`aplayer-btn-active`);\n    div.style.marginRight = '16px';\n    // 添加创建好的文本节点\n    div.appendChild(document.createTextNode(`${item[0]}${item[1]=== 1 ?'': `(${item[1]})`}`));\n    authorDom.appendChild(div);\n  });\n  const authorBtn = document.getElementsByClassName(\"aplayer-btn\");\n  const authorBtnActive = document.getElementsByClassName(\"aplayer-btn-active\");\n\n  let authorName;\n  for (let i in authorBtn) {\n    authorBtn[i].onclick = () => {\n      authorName=author[i][0];\n      showAplayer(audio, authorName);\n      if (authorBtnActive[0]) authorBtnActive[0].classList.remove('aplayer-btn-active')\n      authorBtn[i].classList.add('aplayer-btn-active');\n    }\n  }\n  showAplayer(audio);\n})\n\n</script>\n<!--\n\n        <div id=\"aplayer-urhhmYqd\" class=\"aplayer aplayer-tag-marker\" style=\"margin-bottom: 20px;\"></div>\n\t\t\t  <script>\n\t\t\t\t  var options = {\"narrow\":false,\"autoplay\":false,\"showlrc\":3,\"mode\":\"list\",\"listMaxHeight\":\"400px\",\"music\":[{\"theme\":\"#ebd0c2\",\"title\":\"云烟成雨\",\"author\":\"房东的猫\",\"url\":\"https://api.i-meto.com/meting/api?server=tencent&type=url&id=001yYM0I30CzdP&auth=243686f98a14224f0d462fb75e9a3dfe3f3d2b12\",\"pic\":\"https://api.i-meto.com/meting/api?server=tencent&type=pic&id=004NFJ230yX0Nz&auth=f68522433cb19f7cf34ce99cb9cf7c2ba76ce5a9\",\"lrc\":\"https://api.i-meto.com/meting/api?server=tencent&type=lrc&id=001yYM0I30CzdP&auth=0b75a8e1f5dbfaddd65cef905563e0b80a162cb2\"}]};\n\t\t\t\t  options.element = document.getElementById(\"aplayer-urhhmYqd\");\n\t\t\t\t  var ap = new APlayer(options);\n\t\t\t    window.aplayers || (window.aplayers = []);\n\t\t\t\t  window.aplayers.push(ap);\n\t\t\t  </script> -->\n","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/friends.jpg","excerpt":"","more":"<style >\n\n  #aplayer-author{\n    border-bottom: 1px solid #eee;\n    padding-bottom: 16px;\n  }\n  #aplayer-author>.aplayer-btn {\n    display: inline-block;\n    cursor: pointer;\n    color: #777;\n  }\n  #aplayer-author>.aplayer-btn:hover {\n    color: #333\n  }\n  #aplayer-author>.aplayer-btn-active {\n    color: #0077cc\n  }\n    #aplayer-author>.aplayer-btn-active:hover{\n    color: #0077cc\n  }\n\n\n</style>\n<div style=\"display: flex\">\n  <div style=\"width: 100px; min-width: 100px\">所有歌手</div>\n  <div id=\"aplayer-author\"></div>\n</div>\n<img id=\"aplayer-loading\" style=\"heigit: 160px; width: 160px; opacity: 0\" src=\"/img/loading.gif\"></img>\n<div id=\"aplayer\"></div>\n\n<script>\nconst getJSON = function(url) {\n    const promise = new Promise(function(resolve, reject){\n        const handler = function() {\n            if (this.readyState !== 4) {\n                return;\n            }\n            if (this.status === 200) {\n                resolve(this.response);\n            } else {\n                reject(new Error(this.statusText));\n            }\n        };\n        const client = new XMLHttpRequest();\n        client.open(\"GET\", url);\n        client.onreadystatechange = handler;\n        client.responseType = \"json\";\n        client.setRequestHeader(\"Accept\", \"application/json\");\n        client.send();\n\n    });\n    return promise;\n};\n\n  const dom = document.getElementById('aplayer-loading');\n  setTimeout(() => {\n     if(dom) { dom.style.opacity = 100; }\n  }, 300)\n\ngetJSON(\"https://cdn.emooa.com/output.json\").then(function(json = {}) {\n\n  // 随机排序\n  const shuffle = (arr) => {\n    let i = arr.length;\n    while(i) {\n      let j = Math.floor(Math.random() * i--);\n      [arr[j], arr[i]] = [arr[i], arr[j]]\n    } return arr;\n  }\n\n  let audio = shuffle(json.music).map(music => ({...music, \n    url: `https://cdn.emooa.com/${music.url}`,\n    pic: `https://cdn.emooa.com/${music.pic}`,\n    lrc: `https://cdn.emooa.com/${music.lrc}`\n  }));\n  \n  console.log(1, audio)\n \n\n  // 移除loading\n  const loadingDom = document.getElementById('aplayer-loading');\n  loadingDom.style.display=\"none\"\n\n/** 加载aplayer */\n  const showAplayer = (audio, authorName)=> {\n    audio = audio.filter(item => {\n      if (authorName) {\n        if (authorName === '全部') return true;\n        return item.author === authorName;\n      }\n      return true\n    })\n\n    new APlayer({\n      container: document.getElementById('aplayer'),\n      mini: false,\n      autoplay: false,\n      // theme: '#FADFA3',\n      loop: 'all',\n      order: 'list',\n      preload: 'auto',\n      volume: 0.7,\n      mutex: true,\n      listFolded: false,\n      listMaxHeight: '400px',\n      lrcType: 3,\n      audio: audio,\n    });\n  }\n\n  /** 加载歌手 */\n  const authorDom = document.getElementById('aplayer-author');\n  let author = audio.map(item => item.author);\n\n  var authorTimes = {};\n  for (var i = 0; i < author.length; i++) {\n    var key = author[i];\n    if (authorTimes[key]) {\n      authorTimes[key]++;\n    } else {\n      authorTimes[key] = 1;\n    }\n  }\n\n\n  author = Object.entries(authorTimes).sort((a,b) => b[1]-a[1])\n  author = [['全部', audio.length],...author];\n  author.forEach((item, index) => {\n    const div = document.createElement('div');\n    div.classList.add('aplayer-btn');\n    if(index === 0)  div.classList.add(`aplayer-btn-active`);\n    div.style.marginRight = '16px';\n    // 添加创建好的文本节点\n    div.appendChild(document.createTextNode(`${item[0]}${item[1]=== 1 ?'': `(${item[1]})`}`));\n    authorDom.appendChild(div);\n  });\n  const authorBtn = document.getElementsByClassName(\"aplayer-btn\");\n  const authorBtnActive = document.getElementsByClassName(\"aplayer-btn-active\");\n\n  let authorName;\n  for (let i in authorBtn) {\n    authorBtn[i].onclick = () => {\n      authorName=author[i][0];\n      showAplayer(audio, authorName);\n      if (authorBtnActive[0]) authorBtnActive[0].classList.remove('aplayer-btn-active')\n      authorBtn[i].classList.add('aplayer-btn-active');\n    }\n  }\n  showAplayer(audio);\n})\n\n</script>\n<!--\n\n        <div id=\"aplayer-urhhmYqd\" class=\"aplayer aplayer-tag-marker\" style=\"margin-bottom: 20px;\"></div>\n\t\t\t  <script>\n\t\t\t\t  var options = {\"narrow\":false,\"autoplay\":false,\"showlrc\":3,\"mode\":\"list\",\"listMaxHeight\":\"400px\",\"music\":[{\"theme\":\"#ebd0c2\",\"title\":\"云烟成雨\",\"author\":\"房东的猫\",\"url\":\"https://api.i-meto.com/meting/api?server=tencent&type=url&id=001yYM0I30CzdP&auth=243686f98a14224f0d462fb75e9a3dfe3f3d2b12\",\"pic\":\"https://api.i-meto.com/meting/api?server=tencent&type=pic&id=004NFJ230yX0Nz&auth=f68522433cb19f7cf34ce99cb9cf7c2ba76ce5a9\",\"lrc\":\"https://api.i-meto.com/meting/api?server=tencent&type=lrc&id=001yYM0I30CzdP&auth=0b75a8e1f5dbfaddd65cef905563e0b80a162cb2\"}]};\n\t\t\t\t  options.element = document.getElementById(\"aplayer-urhhmYqd\");\n\t\t\t\t  var ap = new APlayer(options);\n\t\t\t    window.aplayers || (window.aplayers = []);\n\t\t\t\t  window.aplayers.push(ap);\n\t\t\t  </script> -->\n"},{"_content":"","source":"css/fps.css","raw":"","date":"2025-06-04T02:27:27.927Z","updated":"2025-05-28T02:58:54.000Z","path":"css/fps.css","layout":"false","title":"","comments":1,"_id":"cmbhbyluo000agkc21qak42zs","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/friends.jpg","excerpt":"","more":""}],"Post":[{"title":"正则表达式","date":"2022-03-02T10:59:22.000Z","cover":"/img/avatar-regex.png","keywords":["博客","blog","正则表达式","RegExp","regex"],"_content":"\n# 语法\n\n| 字符                                       | 描述                                                                                                                                                                                                                                                                                                                                                                     |\n| ------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| `\\`                                        | 将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，“n”匹配字符“n”。“\\n”匹配一个换行符。串行“\\\\”匹配“\\”而“\\(”则匹配“(”。                                                                                                                                                                                                           |\n| `^`                                        | 匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^也匹配“\\n”或“\\r”之后的位置。                                                                                                                                                                                                                                                                         |\n| `$`                                        | 匹配输入字符串的结束位置。如果设置了 RegExp 对象的 Multiline 属性，\\$也匹配“\\n”或“\\r”之前的位置。                                                                                                                                                                                                                                                                        |\n| `*`                                        | 匹配前面的子表达式零次或多次。例如，zo*能匹配“z”以及“zoo”。*等价于{0,}。                                                                                                                                                                                                                                                                                                 |\n| `+`                                        | 匹配前面的子表达式一次或多次。例如，“zo+”能匹配“zo”以及“zoo”，但不能匹配“z”。+等价于{1,}。                                                                                                                                                                                                                                                                               |\n| `?`                                        | 匹配前面的子表达式零次或一次。例如，“do(es)?”可以匹配“does”或“does”中的“do”。?等价于{0,1}。                                                                                                                                                                                                                                                                              |\n| `{n}`                                      | n 是一个非负整数。匹配确定的 n 次。例如，“o{2}”不能匹配“Bob”中的“o”，但是能匹配“food”中的两个 o。                                                                                                                                                                                                                                                                        |\n| `{n,}`                                     | n 是一个非负整数。至少匹配 n 次。例如，“o{2,}”不能匹配“Bob”中的“o”，但能匹配“foooood”中的所有 o。“o{1,}”等价于“o+”。“o{0,}”则等价于“o\\*”。                                                                                                                                                                                                                               |\n| `{n,m}`                                    | m 和 n 均为非负整数，其中 n<=m。最少匹配 n 次且最多匹配 m 次。例如，“o{1,3}”将匹配“fooooood”中的前三个 o。“o{0,1}”等价于“o?”。请注意在逗号和两个数之间不能有空格。                                                                                                                                                                                                       |\n| `?`                                        | 当该字符紧跟在任何一个其他限制符（\\*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“oooo”，“o+?”将匹配单个“o”，而“o+”将匹配所有“o”。                                                                                                                        |\n| `.`                                        | 匹配除“\\n”之外的任何单个字符。要匹配包括“\\n”在内的任何字符，请使用像“(.&#124;\\n)”的模式。                                                                                                                                                                                                                                                                                |\n| `(pattern)`                                | 匹配 pattern 并获取这一匹配。所获取的匹配可以从产生的 Matches 集合得到，在 VBScript 中使用 SubMatches 集合，在 JScript 中则使用$0…$9 属性。要匹配圆括号字符，请使用“\\(”或“\\)”。                                                                                                                                                                                          |\n| `(?:pattern)`                              | 匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符“(&#124;)”来组合一个模式的各个部分是很有用。例如“industr(?:y&#124;ies)”就是一个比“industry&#124;industries”更简略的表达式。                                                                                                                                               |\n| `(?=pattern)`                              | 正向肯定预查，在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“Windows(?=95&#124;98 &#124;NT&#124;2000)”能匹配“Windows2000”中的“Windows”，但不能匹配“Windows3.1”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。 |\n| `(?!pattern)`                              | 正向否定预查，在任何不匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“Windows(?!95&#124;98&#124;NT&#124;2000)”能匹配“Windows3.1”中的“Windows”，但不能匹配“Windows2000”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。  |\n| <p style=\"width: 140px\">`(?<=pattern)`</p> | 反向肯定预查，与正向肯定预查类拟，只是方向相反。例如，“(?<=95&#124;98&#124;NT&#124;2000)Windows”能匹配“2000Windows”中的“Windows”，但不能匹配“3.1Windows”中的“Windows”。                                                                                                                                                                                                  |\n| `(?<!pattern)`                             | 反向否定预查，与正向否定预查类拟，只是方向相反。例如“(?<!95&#124;98&#124;NT&#124;2000)Windows”能匹配“3.1Windows”中的“Windows”，但不能匹配“2000Windows”中的“Windows”。                                                                                                                                                                                                    |\n| `x&#124;y`                                 | 匹配 x 或 y。例如，“z&#124;food”能匹配“z”或“food”。“(z&#124;f)ood”则匹配“zood”或“food”。                                                                                                                                                                                                                                                                                 |\n| `[xyz]`                                    | 字符集合。匹配所包含的任意一个字符。例如，“[abc]”可以匹配“plain”中的“a”。                                                                                                                                                                                                                                                                                                |\n| `[^xyz]`                                   | 负值字符集合。匹配未包含的任意字符。例如，“[^abc]”可以匹配“plain”中的“p”。                                                                                                                                                                                                                                                                                               |\n| `[a-z]`                                    | 字符范围。匹配指定范围内的任意字符。例如，“[a-z]”可以匹配“a”到“z”范围内的任意小写字母字符。                                                                                                                                                                                                                                                                              |\n| `[^a-z]`                                   | 负值字符范围。匹配任何不在指定范围内的任意字符。例如，“[^a-z]”可以匹配任何不在“a”到“z”范围内的任意字符。                                                                                                                                                                                                                                                                 |\n| `\\b`                                       | 匹配一个单词边界，也就是指单词和空格间的位置。例如，“er\\b”可以匹配“never”中的“er”，但不能匹配“verb”中的“er”。                                                                                                                                                                                                                                                            |\n| `\\B`                                       | 匹配非单词边界。“er\\B”能匹配“verb”中的“er”，但不能匹配“never”中的“er”。                                                                                                                                                                                                                                                                                                  |\n| `\\cx`                                      | 匹配由 x 指明的控制字符。例如，\\cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的“c”字符。                                                                                                                                                                                                                                         |\n| `\\d`                                       | 匹配一个数字字符。等价于[0-9]。                                                                                                                                                                                                                                                                                                                                          |\n| `\\D`                                       | 匹配一个非数字字符。等价于[^0-9]。                                                                                                                                                                                                                                                                                                                                       |\n| `\\f`                                       | 匹配一个换页符。等价于\\x0c 和\\cL。                                                                                                                                                                                                                                                                                                                                       |\n| `\\n`                                       | 匹配一个换行符。等价于\\x0a 和\\cJ。                                                                                                                                                                                                                                                                                                                                       |\n| `\\r`                                       | 匹配一个回车符。等价于\\x0d 和\\cM。                                                                                                                                                                                                                                                                                                                                       |\n| `\\s`                                       | 匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \\f\\n\\r\\t\\v]。                                                                                                                                                                                                                                                                                                    |\n| `\\S`                                       | 匹配任何非空白字符。等价于[^ \\f\\n\\r\\t\\v]。                                                                                                                                                                                                                                                                                                                               |\n| `\\t`                                       | 匹配一个制表符。等价于\\x09 和\\cI。                                                                                                                                                                                                                                                                                                                                       |\n| `\\v`                                       | 匹配一个垂直制表符。等价于\\x0b 和\\cK。                                                                                                                                                                                                                                                                                                                                   |\n| `\\w`                                       | 匹配包括下划线的任何单词字符。等价于“[A-Za-z0-9_]”。                                                                                                                                                                                                                                                                                                                     |\n| `\\W `                                      | 匹配任何非单词字符。等价于“[^a-za-z0-9_]”。                                                                                                                                                                                                                                                                                                                              |\n| `\\xn`                                      | 匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“\\x41”匹配“A”。“\\x041”则等价于“\\x04&1”。正则表达式中可以使用 ASCII 编码。                                                                                                                                                                                                                   |\n| `\\num`                                     | 匹配 num，其中 num 是一个正整数。对所获取的匹配的引用。例如，“(.)\\1”匹配两个连续的相同字符。                                                                                                                                                                                                                                                                             |\n| `\\n`                                       | 标识一个八进制转义值或一个向后引用。如果\\n 之前至少 n 个获取的子表达式，则 n 为向后引用。否则，如果 n 为八进制数字（0-7），则 n 为一个八进制转义值。                                                                                                                                                                                                                     |\n| `\\nm`                                      | 标识一个八进制转义值或一个向后引用。如果\\nm 之前至少有 nm 个获得子表达式，则 nm 为向后引用。如果\\nm 之前至少有 n 个获取，则 n 为一个后跟文字 m 的向后引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字（0-7），则\\nm 将匹配八进制转义值 nm。                                                                                                                        |\n| `\\nml`                                     | 如果 n 为八进制数字（0-3），且 m 和 l 均为八进制数字（0-7），则匹配八进制转义值 nml。                                                                                                                                                                                                                                                                                    |\n| `\\un`                                      | 匹配 n，其中 n 是一个用四个十六进制数字表示的 Unicode 字符。例如，\\u00A9 匹配版权符号（©）。                                                                                                                                                                                                                                                                             |\n\n# 常用正则表达式\n\n| 字符                     | 描述                                                                                                                                                                                                                                      |\n| ------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| 用户名                   | `/^([a-zA-Z][-a-z0-9A-Z]{0,64})$/` // 必须以字母开头，可含数字、字母（大小写敏感）、连字符组成，0-64 位字符。                                                                                                                             |\n| 密码                     | `/^[a-z0-9_-]{6,18}$/`                                                                                                                                                                                                                    |\n| 十六进制值               | <code>/^#?([a-f0-9]{6}&#124;[a-f0-9]{3})\\$/</code>                                                                                                                                                                                        |\n| 电子邮箱                 | `/^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})\\$/` <br> `/^[a-z\\d]+(\\.[a-z\\d]+)\\_@([\\da-z](-[\\da-z])?)+(\\.{1,2}[a-z]+)+$/`                                                                                                              |\n| URL                      | `/^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]_)_\\/?$/`                                                                                                                                                                        |\n| IP 地址                  | <code>/((2[0-4]\\d&#124;25[0-5]&#124;[01]?\\d\\d?)\\.){3}(2[0-4]\\d&#124;25[0-5]&#124;[01]?\\d\\d?)/</code> <br> <code>/^(?:(?:25[0-5]&#124;2[0-4][0-9]&#124;[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]&#124;2[0-4][0-9]&#124;[01]?[0-9][0-9]?)\\$/</code> |\n| HTML 标签                | <code>/^<([a-z]+)([^<]+)_(?:>(._)<\\/\\1>&#124;\\s+\\/>)\\$/</code>                                                                                                                                                                            |\n| 删除代码 \\\\\\\\注释        | <code>(?\\<!http:&#124;\\S)//.\\*\\$</code>                                                                                                                                                                                                   |\n| Unicode 编码中的汉字范围 | `/^[\\u2E80-\\u9FFF]+$/`                                                                                                                                                                                                                    |\n| git 仓库                 | `/(?<=\\/)[^\\/]+(?=\\.git)/`                                                                                                                                                                                                                |\n","source":"_posts/regexp.md","raw":"---\ntitle: 正则表达式\ndate: 2022-03-02 18:59:22\ncover: /img/avatar-regex.png\ncategories:\n  - 实用教程\ntag:\n  - RegExp\nkeywords:\n  - 博客\n  - blog\n  - 正则表达式\n  - RegExp\n  - regex\n---\n\n# 语法\n\n| 字符                                       | 描述                                                                                                                                                                                                                                                                                                                                                                     |\n| ------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| `\\`                                        | 将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，“n”匹配字符“n”。“\\n”匹配一个换行符。串行“\\\\”匹配“\\”而“\\(”则匹配“(”。                                                                                                                                                                                                           |\n| `^`                                        | 匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^也匹配“\\n”或“\\r”之后的位置。                                                                                                                                                                                                                                                                         |\n| `$`                                        | 匹配输入字符串的结束位置。如果设置了 RegExp 对象的 Multiline 属性，\\$也匹配“\\n”或“\\r”之前的位置。                                                                                                                                                                                                                                                                        |\n| `*`                                        | 匹配前面的子表达式零次或多次。例如，zo*能匹配“z”以及“zoo”。*等价于{0,}。                                                                                                                                                                                                                                                                                                 |\n| `+`                                        | 匹配前面的子表达式一次或多次。例如，“zo+”能匹配“zo”以及“zoo”，但不能匹配“z”。+等价于{1,}。                                                                                                                                                                                                                                                                               |\n| `?`                                        | 匹配前面的子表达式零次或一次。例如，“do(es)?”可以匹配“does”或“does”中的“do”。?等价于{0,1}。                                                                                                                                                                                                                                                                              |\n| `{n}`                                      | n 是一个非负整数。匹配确定的 n 次。例如，“o{2}”不能匹配“Bob”中的“o”，但是能匹配“food”中的两个 o。                                                                                                                                                                                                                                                                        |\n| `{n,}`                                     | n 是一个非负整数。至少匹配 n 次。例如，“o{2,}”不能匹配“Bob”中的“o”，但能匹配“foooood”中的所有 o。“o{1,}”等价于“o+”。“o{0,}”则等价于“o\\*”。                                                                                                                                                                                                                               |\n| `{n,m}`                                    | m 和 n 均为非负整数，其中 n<=m。最少匹配 n 次且最多匹配 m 次。例如，“o{1,3}”将匹配“fooooood”中的前三个 o。“o{0,1}”等价于“o?”。请注意在逗号和两个数之间不能有空格。                                                                                                                                                                                                       |\n| `?`                                        | 当该字符紧跟在任何一个其他限制符（\\*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“oooo”，“o+?”将匹配单个“o”，而“o+”将匹配所有“o”。                                                                                                                        |\n| `.`                                        | 匹配除“\\n”之外的任何单个字符。要匹配包括“\\n”在内的任何字符，请使用像“(.&#124;\\n)”的模式。                                                                                                                                                                                                                                                                                |\n| `(pattern)`                                | 匹配 pattern 并获取这一匹配。所获取的匹配可以从产生的 Matches 集合得到，在 VBScript 中使用 SubMatches 集合，在 JScript 中则使用$0…$9 属性。要匹配圆括号字符，请使用“\\(”或“\\)”。                                                                                                                                                                                          |\n| `(?:pattern)`                              | 匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符“(&#124;)”来组合一个模式的各个部分是很有用。例如“industr(?:y&#124;ies)”就是一个比“industry&#124;industries”更简略的表达式。                                                                                                                                               |\n| `(?=pattern)`                              | 正向肯定预查，在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“Windows(?=95&#124;98 &#124;NT&#124;2000)”能匹配“Windows2000”中的“Windows”，但不能匹配“Windows3.1”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。 |\n| `(?!pattern)`                              | 正向否定预查，在任何不匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“Windows(?!95&#124;98&#124;NT&#124;2000)”能匹配“Windows3.1”中的“Windows”，但不能匹配“Windows2000”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。  |\n| <p style=\"width: 140px\">`(?<=pattern)`</p> | 反向肯定预查，与正向肯定预查类拟，只是方向相反。例如，“(?<=95&#124;98&#124;NT&#124;2000)Windows”能匹配“2000Windows”中的“Windows”，但不能匹配“3.1Windows”中的“Windows”。                                                                                                                                                                                                  |\n| `(?<!pattern)`                             | 反向否定预查，与正向否定预查类拟，只是方向相反。例如“(?<!95&#124;98&#124;NT&#124;2000)Windows”能匹配“3.1Windows”中的“Windows”，但不能匹配“2000Windows”中的“Windows”。                                                                                                                                                                                                    |\n| `x&#124;y`                                 | 匹配 x 或 y。例如，“z&#124;food”能匹配“z”或“food”。“(z&#124;f)ood”则匹配“zood”或“food”。                                                                                                                                                                                                                                                                                 |\n| `[xyz]`                                    | 字符集合。匹配所包含的任意一个字符。例如，“[abc]”可以匹配“plain”中的“a”。                                                                                                                                                                                                                                                                                                |\n| `[^xyz]`                                   | 负值字符集合。匹配未包含的任意字符。例如，“[^abc]”可以匹配“plain”中的“p”。                                                                                                                                                                                                                                                                                               |\n| `[a-z]`                                    | 字符范围。匹配指定范围内的任意字符。例如，“[a-z]”可以匹配“a”到“z”范围内的任意小写字母字符。                                                                                                                                                                                                                                                                              |\n| `[^a-z]`                                   | 负值字符范围。匹配任何不在指定范围内的任意字符。例如，“[^a-z]”可以匹配任何不在“a”到“z”范围内的任意字符。                                                                                                                                                                                                                                                                 |\n| `\\b`                                       | 匹配一个单词边界，也就是指单词和空格间的位置。例如，“er\\b”可以匹配“never”中的“er”，但不能匹配“verb”中的“er”。                                                                                                                                                                                                                                                            |\n| `\\B`                                       | 匹配非单词边界。“er\\B”能匹配“verb”中的“er”，但不能匹配“never”中的“er”。                                                                                                                                                                                                                                                                                                  |\n| `\\cx`                                      | 匹配由 x 指明的控制字符。例如，\\cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的“c”字符。                                                                                                                                                                                                                                         |\n| `\\d`                                       | 匹配一个数字字符。等价于[0-9]。                                                                                                                                                                                                                                                                                                                                          |\n| `\\D`                                       | 匹配一个非数字字符。等价于[^0-9]。                                                                                                                                                                                                                                                                                                                                       |\n| `\\f`                                       | 匹配一个换页符。等价于\\x0c 和\\cL。                                                                                                                                                                                                                                                                                                                                       |\n| `\\n`                                       | 匹配一个换行符。等价于\\x0a 和\\cJ。                                                                                                                                                                                                                                                                                                                                       |\n| `\\r`                                       | 匹配一个回车符。等价于\\x0d 和\\cM。                                                                                                                                                                                                                                                                                                                                       |\n| `\\s`                                       | 匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \\f\\n\\r\\t\\v]。                                                                                                                                                                                                                                                                                                    |\n| `\\S`                                       | 匹配任何非空白字符。等价于[^ \\f\\n\\r\\t\\v]。                                                                                                                                                                                                                                                                                                                               |\n| `\\t`                                       | 匹配一个制表符。等价于\\x09 和\\cI。                                                                                                                                                                                                                                                                                                                                       |\n| `\\v`                                       | 匹配一个垂直制表符。等价于\\x0b 和\\cK。                                                                                                                                                                                                                                                                                                                                   |\n| `\\w`                                       | 匹配包括下划线的任何单词字符。等价于“[A-Za-z0-9_]”。                                                                                                                                                                                                                                                                                                                     |\n| `\\W `                                      | 匹配任何非单词字符。等价于“[^a-za-z0-9_]”。                                                                                                                                                                                                                                                                                                                              |\n| `\\xn`                                      | 匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“\\x41”匹配“A”。“\\x041”则等价于“\\x04&1”。正则表达式中可以使用 ASCII 编码。                                                                                                                                                                                                                   |\n| `\\num`                                     | 匹配 num，其中 num 是一个正整数。对所获取的匹配的引用。例如，“(.)\\1”匹配两个连续的相同字符。                                                                                                                                                                                                                                                                             |\n| `\\n`                                       | 标识一个八进制转义值或一个向后引用。如果\\n 之前至少 n 个获取的子表达式，则 n 为向后引用。否则，如果 n 为八进制数字（0-7），则 n 为一个八进制转义值。                                                                                                                                                                                                                     |\n| `\\nm`                                      | 标识一个八进制转义值或一个向后引用。如果\\nm 之前至少有 nm 个获得子表达式，则 nm 为向后引用。如果\\nm 之前至少有 n 个获取，则 n 为一个后跟文字 m 的向后引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字（0-7），则\\nm 将匹配八进制转义值 nm。                                                                                                                        |\n| `\\nml`                                     | 如果 n 为八进制数字（0-3），且 m 和 l 均为八进制数字（0-7），则匹配八进制转义值 nml。                                                                                                                                                                                                                                                                                    |\n| `\\un`                                      | 匹配 n，其中 n 是一个用四个十六进制数字表示的 Unicode 字符。例如，\\u00A9 匹配版权符号（©）。                                                                                                                                                                                                                                                                             |\n\n# 常用正则表达式\n\n| 字符                     | 描述                                                                                                                                                                                                                                      |\n| ------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| 用户名                   | `/^([a-zA-Z][-a-z0-9A-Z]{0,64})$/` // 必须以字母开头，可含数字、字母（大小写敏感）、连字符组成，0-64 位字符。                                                                                                                             |\n| 密码                     | `/^[a-z0-9_-]{6,18}$/`                                                                                                                                                                                                                    |\n| 十六进制值               | <code>/^#?([a-f0-9]{6}&#124;[a-f0-9]{3})\\$/</code>                                                                                                                                                                                        |\n| 电子邮箱                 | `/^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})\\$/` <br> `/^[a-z\\d]+(\\.[a-z\\d]+)\\_@([\\da-z](-[\\da-z])?)+(\\.{1,2}[a-z]+)+$/`                                                                                                              |\n| URL                      | `/^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]_)_\\/?$/`                                                                                                                                                                        |\n| IP 地址                  | <code>/((2[0-4]\\d&#124;25[0-5]&#124;[01]?\\d\\d?)\\.){3}(2[0-4]\\d&#124;25[0-5]&#124;[01]?\\d\\d?)/</code> <br> <code>/^(?:(?:25[0-5]&#124;2[0-4][0-9]&#124;[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]&#124;2[0-4][0-9]&#124;[01]?[0-9][0-9]?)\\$/</code> |\n| HTML 标签                | <code>/^<([a-z]+)([^<]+)_(?:>(._)<\\/\\1>&#124;\\s+\\/>)\\$/</code>                                                                                                                                                                            |\n| 删除代码 \\\\\\\\注释        | <code>(?\\<!http:&#124;\\S)//.\\*\\$</code>                                                                                                                                                                                                   |\n| Unicode 编码中的汉字范围 | `/^[\\u2E80-\\u9FFF]+$/`                                                                                                                                                                                                                    |\n| git 仓库                 | `/(?<=\\/)[^\\/]+(?=\\.git)/`                                                                                                                                                                                                                |\n","slug":"regexp","published":1,"updated":"2025-06-04T06:52:07.009Z","_id":"cmbhbylv70050gkc23qxde8ys","comments":1,"layout":"post","photos":[],"link":"","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h1><table>\n<thead>\n<tr>\n<th>字符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>\\</code></td>\n<td>将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，“n”匹配字符“n”。“\\n”匹配一个换行符。串行“\\”匹配“\\”而“(”则匹配“(”。</td>\n</tr>\n<tr>\n<td><code>^</code></td>\n<td>匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^也匹配“\\n”或“\\r”之后的位置。</td>\n</tr>\n<tr>\n<td><code>$</code></td>\n<td>匹配输入字符串的结束位置。如果设置了 RegExp 对象的 Multiline 属性，$也匹配“\\n”或“\\r”之前的位置。</td>\n</tr>\n<tr>\n<td><code>*</code></td>\n<td>匹配前面的子表达式零次或多次。例如，zo<em>能匹配“z”以及“zoo”。</em>等价于{0,}。</td>\n</tr>\n<tr>\n<td><code>+</code></td>\n<td>匹配前面的子表达式一次或多次。例如，“zo+”能匹配“zo”以及“zoo”，但不能匹配“z”。+等价于{1,}。</td>\n</tr>\n<tr>\n<td><code>?</code></td>\n<td>匹配前面的子表达式零次或一次。例如，“do(es)?”可以匹配“does”或“does”中的“do”。?等价于{0,1}。</td>\n</tr>\n<tr>\n<td><code>&#123;n&#125;</code></td>\n<td>n 是一个非负整数。匹配确定的 n 次。例如，“o{2}”不能匹配“Bob”中的“o”，但是能匹配“food”中的两个 o。</td>\n</tr>\n<tr>\n<td><code>&#123;n,&#125;</code></td>\n<td>n 是一个非负整数。至少匹配 n 次。例如，“o{2,}”不能匹配“Bob”中的“o”，但能匹配“foooood”中的所有 o。“o{1,}”等价于“o+”。“o{0,}”则等价于“o*”。</td>\n</tr>\n<tr>\n<td><code>&#123;n,m&#125;</code></td>\n<td>m 和 n 均为非负整数，其中 n&lt;=m。最少匹配 n 次且最多匹配 m 次。例如，“o{1,3}”将匹配“fooooood”中的前三个 o。“o{0,1}”等价于“o?”。请注意在逗号和两个数之间不能有空格。</td>\n</tr>\n<tr>\n<td><code>?</code></td>\n<td>当该字符紧跟在任何一个其他限制符（*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“oooo”，“o+?”将匹配单个“o”，而“o+”将匹配所有“o”。</td>\n</tr>\n<tr>\n<td><code>.</code></td>\n<td>匹配除“\\n”之外的任何单个字符。要匹配包括“\\n”在内的任何字符，请使用像“(.&#124;\\n)”的模式。</td>\n</tr>\n<tr>\n<td><code>(pattern)</code></td>\n<td>匹配 pattern 并获取这一匹配。所获取的匹配可以从产生的 Matches 集合得到，在 VBScript 中使用 SubMatches 集合，在 JScript 中则使用$0…$9 属性。要匹配圆括号字符，请使用“(”或“)”。</td>\n</tr>\n<tr>\n<td><code>(?:pattern)</code></td>\n<td>匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符“(&#124;)”来组合一个模式的各个部分是很有用。例如“industr(?:y&#124;ies)”就是一个比“industry&#124;industries”更简略的表达式。</td>\n</tr>\n<tr>\n<td><code>(?=pattern)</code></td>\n<td>正向肯定预查，在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“Windows(?=95&#124;98 &#124;NT&#124;2000)”能匹配“Windows2000”中的“Windows”，但不能匹配“Windows3.1”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td>\n</tr>\n<tr>\n<td><code>(?!pattern)</code></td>\n<td>正向否定预查，在任何不匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“Windows(?!95&#124;98&#124;NT&#124;2000)”能匹配“Windows3.1”中的“Windows”，但不能匹配“Windows2000”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td>\n</tr>\n<tr>\n<td><p style=\"width: 140px\"><code>(?&lt;=pattern)</code></p></td>\n<td>反向肯定预查，与正向肯定预查类拟，只是方向相反。例如，“(?&lt;=95&#124;98&#124;NT&#124;2000)Windows”能匹配“2000Windows”中的“Windows”，但不能匹配“3.1Windows”中的“Windows”。</td>\n</tr>\n<tr>\n<td><code>(?&lt;!pattern)</code></td>\n<td>反向否定预查，与正向否定预查类拟，只是方向相反。例如“(?&lt;!95&#124;98&#124;NT&#124;2000)Windows”能匹配“3.1Windows”中的“Windows”，但不能匹配“2000Windows”中的“Windows”。</td>\n</tr>\n<tr>\n<td><code>x&amp;#124;y</code></td>\n<td>匹配 x 或 y。例如，“z&#124;food”能匹配“z”或“food”。“(z&#124;f)ood”则匹配“zood”或“food”。</td>\n</tr>\n<tr>\n<td><code>[xyz]</code></td>\n<td>字符集合。匹配所包含的任意一个字符。例如，“[abc]”可以匹配“plain”中的“a”。</td>\n</tr>\n<tr>\n<td><code>[^xyz]</code></td>\n<td>负值字符集合。匹配未包含的任意字符。例如，“[^abc]”可以匹配“plain”中的“p”。</td>\n</tr>\n<tr>\n<td><code>[a-z]</code></td>\n<td>字符范围。匹配指定范围内的任意字符。例如，“[a-z]”可以匹配“a”到“z”范围内的任意小写字母字符。</td>\n</tr>\n<tr>\n<td><code>[^a-z]</code></td>\n<td>负值字符范围。匹配任何不在指定范围内的任意字符。例如，“[^a-z]”可以匹配任何不在“a”到“z”范围内的任意字符。</td>\n</tr>\n<tr>\n<td><code>\\b</code></td>\n<td>匹配一个单词边界，也就是指单词和空格间的位置。例如，“er\\b”可以匹配“never”中的“er”，但不能匹配“verb”中的“er”。</td>\n</tr>\n<tr>\n<td><code>\\B</code></td>\n<td>匹配非单词边界。“er\\B”能匹配“verb”中的“er”，但不能匹配“never”中的“er”。</td>\n</tr>\n<tr>\n<td><code>\\cx</code></td>\n<td>匹配由 x 指明的控制字符。例如，\\cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的“c”字符。</td>\n</tr>\n<tr>\n<td><code>\\d</code></td>\n<td>匹配一个数字字符。等价于[0-9]。</td>\n</tr>\n<tr>\n<td><code>\\D</code></td>\n<td>匹配一个非数字字符。等价于[^0-9]。</td>\n</tr>\n<tr>\n<td><code>\\f</code></td>\n<td>匹配一个换页符。等价于\\x0c 和\\cL。</td>\n</tr>\n<tr>\n<td><code>\\n</code></td>\n<td>匹配一个换行符。等价于\\x0a 和\\cJ。</td>\n</tr>\n<tr>\n<td><code>\\r</code></td>\n<td>匹配一个回车符。等价于\\x0d 和\\cM。</td>\n</tr>\n<tr>\n<td><code>\\s</code></td>\n<td>匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \\f\\n\\r\\t\\v]。</td>\n</tr>\n<tr>\n<td><code>\\S</code></td>\n<td>匹配任何非空白字符。等价于[^ \\f\\n\\r\\t\\v]。</td>\n</tr>\n<tr>\n<td><code>\\t</code></td>\n<td>匹配一个制表符。等价于\\x09 和\\cI。</td>\n</tr>\n<tr>\n<td><code>\\v</code></td>\n<td>匹配一个垂直制表符。等价于\\x0b 和\\cK。</td>\n</tr>\n<tr>\n<td><code>\\w</code></td>\n<td>匹配包括下划线的任何单词字符。等价于“[A-Za-z0-9_]”。</td>\n</tr>\n<tr>\n<td><code>\\W </code></td>\n<td>匹配任何非单词字符。等价于“[^a-za-z0-9_]”。</td>\n</tr>\n<tr>\n<td><code>\\xn</code></td>\n<td>匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“\\x41”匹配“A”。“\\x041”则等价于“\\x04&amp;1”。正则表达式中可以使用 ASCII 编码。</td>\n</tr>\n<tr>\n<td><code>\\num</code></td>\n<td>匹配 num，其中 num 是一个正整数。对所获取的匹配的引用。例如，“(.)\\1”匹配两个连续的相同字符。</td>\n</tr>\n<tr>\n<td><code>\\n</code></td>\n<td>标识一个八进制转义值或一个向后引用。如果\\n 之前至少 n 个获取的子表达式，则 n 为向后引用。否则，如果 n 为八进制数字（0-7），则 n 为一个八进制转义值。</td>\n</tr>\n<tr>\n<td><code>\\nm</code></td>\n<td>标识一个八进制转义值或一个向后引用。如果\\nm 之前至少有 nm 个获得子表达式，则 nm 为向后引用。如果\\nm 之前至少有 n 个获取，则 n 为一个后跟文字 m 的向后引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字（0-7），则\\nm 将匹配八进制转义值 nm。</td>\n</tr>\n<tr>\n<td><code>\\nml</code></td>\n<td>如果 n 为八进制数字（0-3），且 m 和 l 均为八进制数字（0-7），则匹配八进制转义值 nml。</td>\n</tr>\n<tr>\n<td><code>\\un</code></td>\n<td>匹配 n，其中 n 是一个用四个十六进制数字表示的 Unicode 字符。例如，\\u00A9 匹配版权符号（©）。</td>\n</tr>\n</tbody></table>\n<h1 id=\"常用正则表达式\"><a href=\"#常用正则表达式\" class=\"headerlink\" title=\"常用正则表达式\"></a>常用正则表达式</h1><table>\n<thead>\n<tr>\n<th>字符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>用户名</td>\n<td><code>/^([a-zA-Z][-a-z0-9A-Z]&#123;0,64&#125;)$/</code> // 必须以字母开头，可含数字、字母（大小写敏感）、连字符组成，0-64 位字符。</td>\n</tr>\n<tr>\n<td>密码</td>\n<td><code>/^[a-z0-9_-]&#123;6,18&#125;$/</code></td>\n</tr>\n<tr>\n<td>十六进制值</td>\n<td><code>/^#?([a-f0-9]&#123;6&#125;&#124;[a-f0-9]&#123;3&#125;)$/</code></td>\n</tr>\n<tr>\n<td>电子邮箱</td>\n<td><code>/^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]&#123;2,6&#125;)\\$/</code> <br> <code>/^[a-z\\d]+(\\.[a-z\\d]+)\\_@([\\da-z](-[\\da-z])?)+(\\.&#123;1,2&#125;[a-z]+)+$/</code></td>\n</tr>\n<tr>\n<td>URL</td>\n<td><code>/^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]&#123;2,6&#125;)([\\/\\w \\.-]_)_\\/?$/</code></td>\n</tr>\n<tr>\n<td>IP 地址</td>\n<td><code>/((2[0-4]\\d&#124;25[0-5]&#124;[01]?\\d\\d?).)&#123;3&#125;(2[0-4]\\d&#124;25[0-5]&#124;[01]?\\d\\d?)/</code> <br> <code>/^(?:(?:25[0-5]&#124;2[0-4][0-9]&#124;[01]?[0-9][0-9]?).)&#123;3&#125;(?:25[0-5]&#124;2[0-4][0-9]&#124;[01]?[0-9][0-9]?)$/</code></td>\n</tr>\n<tr>\n<td>HTML 标签</td>\n<td><code>/^<([a-z]+)([^<]+)<em>(?:>(.</em>)</\\1>&#124;\\s+/>)$/</code></td>\n</tr>\n<tr>\n<td>删除代码 \\\\注释</td>\n<td><code>(?&lt;!http:&#124;\\S)//.*$</code></td>\n</tr>\n<tr>\n<td>Unicode 编码中的汉字范围</td>\n<td><code>/^[\\u2E80-\\u9FFF]+$/</code></td>\n</tr>\n<tr>\n<td>git 仓库</td>\n<td><code>/(?&lt;=\\/)[^\\/]+(?=\\.git)/</code></td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h1><table>\n<thead>\n<tr>\n<th>字符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>\\</code></td>\n<td>将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，“n”匹配字符“n”。“\\n”匹配一个换行符。串行“\\”匹配“\\”而“(”则匹配“(”。</td>\n</tr>\n<tr>\n<td><code>^</code></td>\n<td>匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^也匹配“\\n”或“\\r”之后的位置。</td>\n</tr>\n<tr>\n<td><code>$</code></td>\n<td>匹配输入字符串的结束位置。如果设置了 RegExp 对象的 Multiline 属性，$也匹配“\\n”或“\\r”之前的位置。</td>\n</tr>\n<tr>\n<td><code>*</code></td>\n<td>匹配前面的子表达式零次或多次。例如，zo<em>能匹配“z”以及“zoo”。</em>等价于{0,}。</td>\n</tr>\n<tr>\n<td><code>+</code></td>\n<td>匹配前面的子表达式一次或多次。例如，“zo+”能匹配“zo”以及“zoo”，但不能匹配“z”。+等价于{1,}。</td>\n</tr>\n<tr>\n<td><code>?</code></td>\n<td>匹配前面的子表达式零次或一次。例如，“do(es)?”可以匹配“does”或“does”中的“do”。?等价于{0,1}。</td>\n</tr>\n<tr>\n<td><code>&#123;n&#125;</code></td>\n<td>n 是一个非负整数。匹配确定的 n 次。例如，“o{2}”不能匹配“Bob”中的“o”，但是能匹配“food”中的两个 o。</td>\n</tr>\n<tr>\n<td><code>&#123;n,&#125;</code></td>\n<td>n 是一个非负整数。至少匹配 n 次。例如，“o{2,}”不能匹配“Bob”中的“o”，但能匹配“foooood”中的所有 o。“o{1,}”等价于“o+”。“o{0,}”则等价于“o*”。</td>\n</tr>\n<tr>\n<td><code>&#123;n,m&#125;</code></td>\n<td>m 和 n 均为非负整数，其中 n&lt;=m。最少匹配 n 次且最多匹配 m 次。例如，“o{1,3}”将匹配“fooooood”中的前三个 o。“o{0,1}”等价于“o?”。请注意在逗号和两个数之间不能有空格。</td>\n</tr>\n<tr>\n<td><code>?</code></td>\n<td>当该字符紧跟在任何一个其他限制符（*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“oooo”，“o+?”将匹配单个“o”，而“o+”将匹配所有“o”。</td>\n</tr>\n<tr>\n<td><code>.</code></td>\n<td>匹配除“\\n”之外的任何单个字符。要匹配包括“\\n”在内的任何字符，请使用像“(.&#124;\\n)”的模式。</td>\n</tr>\n<tr>\n<td><code>(pattern)</code></td>\n<td>匹配 pattern 并获取这一匹配。所获取的匹配可以从产生的 Matches 集合得到，在 VBScript 中使用 SubMatches 集合，在 JScript 中则使用$0…$9 属性。要匹配圆括号字符，请使用“(”或“)”。</td>\n</tr>\n<tr>\n<td><code>(?:pattern)</code></td>\n<td>匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符“(&#124;)”来组合一个模式的各个部分是很有用。例如“industr(?:y&#124;ies)”就是一个比“industry&#124;industries”更简略的表达式。</td>\n</tr>\n<tr>\n<td><code>(?=pattern)</code></td>\n<td>正向肯定预查，在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“Windows(?=95&#124;98 &#124;NT&#124;2000)”能匹配“Windows2000”中的“Windows”，但不能匹配“Windows3.1”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td>\n</tr>\n<tr>\n<td><code>(?!pattern)</code></td>\n<td>正向否定预查，在任何不匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“Windows(?!95&#124;98&#124;NT&#124;2000)”能匹配“Windows3.1”中的“Windows”，但不能匹配“Windows2000”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td>\n</tr>\n<tr>\n<td><p style=\"width: 140px\"><code>(?&lt;=pattern)</code></p></td>\n<td>反向肯定预查，与正向肯定预查类拟，只是方向相反。例如，“(?&lt;=95&#124;98&#124;NT&#124;2000)Windows”能匹配“2000Windows”中的“Windows”，但不能匹配“3.1Windows”中的“Windows”。</td>\n</tr>\n<tr>\n<td><code>(?&lt;!pattern)</code></td>\n<td>反向否定预查，与正向否定预查类拟，只是方向相反。例如“(?&lt;!95&#124;98&#124;NT&#124;2000)Windows”能匹配“3.1Windows”中的“Windows”，但不能匹配“2000Windows”中的“Windows”。</td>\n</tr>\n<tr>\n<td><code>x&amp;#124;y</code></td>\n<td>匹配 x 或 y。例如，“z&#124;food”能匹配“z”或“food”。“(z&#124;f)ood”则匹配“zood”或“food”。</td>\n</tr>\n<tr>\n<td><code>[xyz]</code></td>\n<td>字符集合。匹配所包含的任意一个字符。例如，“[abc]”可以匹配“plain”中的“a”。</td>\n</tr>\n<tr>\n<td><code>[^xyz]</code></td>\n<td>负值字符集合。匹配未包含的任意字符。例如，“[^abc]”可以匹配“plain”中的“p”。</td>\n</tr>\n<tr>\n<td><code>[a-z]</code></td>\n<td>字符范围。匹配指定范围内的任意字符。例如，“[a-z]”可以匹配“a”到“z”范围内的任意小写字母字符。</td>\n</tr>\n<tr>\n<td><code>[^a-z]</code></td>\n<td>负值字符范围。匹配任何不在指定范围内的任意字符。例如，“[^a-z]”可以匹配任何不在“a”到“z”范围内的任意字符。</td>\n</tr>\n<tr>\n<td><code>\\b</code></td>\n<td>匹配一个单词边界，也就是指单词和空格间的位置。例如，“er\\b”可以匹配“never”中的“er”，但不能匹配“verb”中的“er”。</td>\n</tr>\n<tr>\n<td><code>\\B</code></td>\n<td>匹配非单词边界。“er\\B”能匹配“verb”中的“er”，但不能匹配“never”中的“er”。</td>\n</tr>\n<tr>\n<td><code>\\cx</code></td>\n<td>匹配由 x 指明的控制字符。例如，\\cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的“c”字符。</td>\n</tr>\n<tr>\n<td><code>\\d</code></td>\n<td>匹配一个数字字符。等价于[0-9]。</td>\n</tr>\n<tr>\n<td><code>\\D</code></td>\n<td>匹配一个非数字字符。等价于[^0-9]。</td>\n</tr>\n<tr>\n<td><code>\\f</code></td>\n<td>匹配一个换页符。等价于\\x0c 和\\cL。</td>\n</tr>\n<tr>\n<td><code>\\n</code></td>\n<td>匹配一个换行符。等价于\\x0a 和\\cJ。</td>\n</tr>\n<tr>\n<td><code>\\r</code></td>\n<td>匹配一个回车符。等价于\\x0d 和\\cM。</td>\n</tr>\n<tr>\n<td><code>\\s</code></td>\n<td>匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \\f\\n\\r\\t\\v]。</td>\n</tr>\n<tr>\n<td><code>\\S</code></td>\n<td>匹配任何非空白字符。等价于[^ \\f\\n\\r\\t\\v]。</td>\n</tr>\n<tr>\n<td><code>\\t</code></td>\n<td>匹配一个制表符。等价于\\x09 和\\cI。</td>\n</tr>\n<tr>\n<td><code>\\v</code></td>\n<td>匹配一个垂直制表符。等价于\\x0b 和\\cK。</td>\n</tr>\n<tr>\n<td><code>\\w</code></td>\n<td>匹配包括下划线的任何单词字符。等价于“[A-Za-z0-9_]”。</td>\n</tr>\n<tr>\n<td><code>\\W </code></td>\n<td>匹配任何非单词字符。等价于“[^a-za-z0-9_]”。</td>\n</tr>\n<tr>\n<td><code>\\xn</code></td>\n<td>匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“\\x41”匹配“A”。“\\x041”则等价于“\\x04&amp;1”。正则表达式中可以使用 ASCII 编码。</td>\n</tr>\n<tr>\n<td><code>\\num</code></td>\n<td>匹配 num，其中 num 是一个正整数。对所获取的匹配的引用。例如，“(.)\\1”匹配两个连续的相同字符。</td>\n</tr>\n<tr>\n<td><code>\\n</code></td>\n<td>标识一个八进制转义值或一个向后引用。如果\\n 之前至少 n 个获取的子表达式，则 n 为向后引用。否则，如果 n 为八进制数字（0-7），则 n 为一个八进制转义值。</td>\n</tr>\n<tr>\n<td><code>\\nm</code></td>\n<td>标识一个八进制转义值或一个向后引用。如果\\nm 之前至少有 nm 个获得子表达式，则 nm 为向后引用。如果\\nm 之前至少有 n 个获取，则 n 为一个后跟文字 m 的向后引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字（0-7），则\\nm 将匹配八进制转义值 nm。</td>\n</tr>\n<tr>\n<td><code>\\nml</code></td>\n<td>如果 n 为八进制数字（0-3），且 m 和 l 均为八进制数字（0-7），则匹配八进制转义值 nml。</td>\n</tr>\n<tr>\n<td><code>\\un</code></td>\n<td>匹配 n，其中 n 是一个用四个十六进制数字表示的 Unicode 字符。例如，\\u00A9 匹配版权符号（©）。</td>\n</tr>\n</tbody></table>\n<h1 id=\"常用正则表达式\"><a href=\"#常用正则表达式\" class=\"headerlink\" title=\"常用正则表达式\"></a>常用正则表达式</h1><table>\n<thead>\n<tr>\n<th>字符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>用户名</td>\n<td><code>/^([a-zA-Z][-a-z0-9A-Z]&#123;0,64&#125;)$/</code> // 必须以字母开头，可含数字、字母（大小写敏感）、连字符组成，0-64 位字符。</td>\n</tr>\n<tr>\n<td>密码</td>\n<td><code>/^[a-z0-9_-]&#123;6,18&#125;$/</code></td>\n</tr>\n<tr>\n<td>十六进制值</td>\n<td><code>/^#?([a-f0-9]&#123;6&#125;&#124;[a-f0-9]&#123;3&#125;)$/</code></td>\n</tr>\n<tr>\n<td>电子邮箱</td>\n<td><code>/^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]&#123;2,6&#125;)\\$/</code> <br> <code>/^[a-z\\d]+(\\.[a-z\\d]+)\\_@([\\da-z](-[\\da-z])?)+(\\.&#123;1,2&#125;[a-z]+)+$/</code></td>\n</tr>\n<tr>\n<td>URL</td>\n<td><code>/^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]&#123;2,6&#125;)([\\/\\w \\.-]_)_\\/?$/</code></td>\n</tr>\n<tr>\n<td>IP 地址</td>\n<td><code>/((2[0-4]\\d&#124;25[0-5]&#124;[01]?\\d\\d?).)&#123;3&#125;(2[0-4]\\d&#124;25[0-5]&#124;[01]?\\d\\d?)/</code> <br> <code>/^(?:(?:25[0-5]&#124;2[0-4][0-9]&#124;[01]?[0-9][0-9]?).)&#123;3&#125;(?:25[0-5]&#124;2[0-4][0-9]&#124;[01]?[0-9][0-9]?)$/</code></td>\n</tr>\n<tr>\n<td>HTML 标签</td>\n<td><code>/^<([a-z]+)([^<]+)<em>(?:>(.</em>)</\\1>&#124;\\s+/>)$/</code></td>\n</tr>\n<tr>\n<td>删除代码 \\\\注释</td>\n<td><code>(?&lt;!http:&#124;\\S)//.*$</code></td>\n</tr>\n<tr>\n<td>Unicode 编码中的汉字范围</td>\n<td><code>/^[\\u2E80-\\u9FFF]+$/</code></td>\n</tr>\n<tr>\n<td>git 仓库</td>\n<td><code>/(?&lt;=\\/)[^\\/]+(?=\\.git)/</code></td>\n</tr>\n</tbody></table>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cmbhbylv70050gkc23qxde8ys","category_id":"cmbhbylva005pgkc21xte6kzx","_id":"cmbhbylvg0098gkc2dvo3g61m"}],"PostTag":[{"post_id":"cmbhbylv70050gkc23qxde8ys","tag_id":"cmbhbylvf008igkc213myevc6","_id":"cmbhbylvf008ngkc2doqubq0y"}],"Tag":[{"name":"Cloudflare","_id":"cmbhbylum0005gkc2c84i8buu"},{"name":"科学上网","_id":"cmbhbyluo000dgkc2giyj5if3"},{"name":"workers","_id":"cmbhbylup000igkc2hxy0h2a3"},{"name":"pages","_id":"cmbhbyluq000ngkc21xx19b0k"},{"name":"服务器","_id":"cmbhbylur000sgkc2bfqc1qh3"},{"name":"vless","_id":"cmbhbylus000zgkc2700wftvo"},{"name":"某墙","_id":"cmbhbylut0014gkc24etq22ld"},{"name":"Clash","_id":"cmbhbylut0019gkc241n94ey7"},{"name":"玄犬","_id":"cmbhbyluu001egkc2cjbra39q"},{"name":"悬楼","_id":"cmbhbyluv001mgkc21zlx37d9"},{"name":"Babel","_id":"cmbhbylux0021gkc26tnwa50q"},{"name":"Blog","_id":"cmbhbylux0028gkc207cmf7p6"},{"name":"Canvas","_id":"cmbhbyluy002fgkc24uwpehms"},{"name":"GeoJSON","_id":"cmbhbyluz002lgkc26z3o5sqh"},{"name":"反代节点","_id":"cmbhbylv0002zgkc2e17i27pt"},{"name":"Google","_id":"cmbhbylv10038gkc23zcfhxe8"},{"name":"Mac","_id":"cmbhbylv2003egkc28o83g704"},{"name":"VS Code","_id":"cmbhbylv3003lgkc2c2zd597y"},{"name":"Git","_id":"cmbhbylv3003sgkc2b5u98bf7"},{"name":"commitizen","_id":"cmbhbylv40041gkc2fq7n6ps3"},{"name":"cz","_id":"cmbhbylv5004agkc297nh9anv"},{"name":"Docker","_id":"cmbhbylv6004ggkc28wrochdv"},{"name":"Rebase","_id":"cmbhbylv9005egkc2a6pp4s1n"},{"name":"Webhook","_id":"cmbhbylvb0060gkc2eor7d298"},{"name":"git","_id":"cmbhbylvc006dgkc2fcn28w65"},{"name":"Go","_id":"cmbhbylvc006lgkc219bfa0n2"},{"name":"Hash","_id":"cmbhbylvd006sgkc2a217btes"},{"name":"Homebrew","_id":"cmbhbylvd0070gkc2btefa6ne"},{"name":"Lerna","_id":"cmbhbylvd0075gkc24jfwg7ww"},{"name":"Linux","_id":"cmbhbylvd0079gkc2g0x037mq"},{"name":"Node","_id":"cmbhbylve007hgkc2gydx7t3x"},{"name":"二进制","_id":"cmbhbylve007kgkc29wf78gup"},{"name":"n","_id":"cmbhbylve007mgkc2bezh3i8k"},{"name":"Nginx","_id":"cmbhbylve007vgkc23k317f18"},{"name":"Ubuntu","_id":"cmbhbylvf0082gkc24rescz06"},{"name":"Oauth2.0","_id":"cmbhbylvf0088gkc27g3w9rzf"},{"name":"pm2","_id":"cmbhbylvf008dgkc2g9mhef1m"},{"name":"RegExp","_id":"cmbhbylvf008igkc213myevc6"},{"name":"Serverless","_id":"cmbhbylvf008mgkc215ht2qei"},{"name":"CSS","_id":"cmbhbylvg008qgkc2aurtftgk"},{"name":"WebGL","_id":"cmbhbylvg0092gkc21jxo9gyb"}]}}